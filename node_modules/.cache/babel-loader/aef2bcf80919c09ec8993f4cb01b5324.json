{"ast":null,"code":"/*\n\tUNIVERSIDAD DEL VALLE DE GUATEMALA\n\tOTHELLO\n\tDiseño WEB\n\tSAÚL CONTRERAS (SUULCODER)\n\n*/\nconst root = document.getElementById('root'); //root element from html\n\nconst renderCell = ({\n  //design for each cell\n  value,\n  index,\n  state\n}) => {\n  const _state = state,\n        board = _state.board;\n  const cell = document.createElement('div');\n  cell.style.backgroundColor = '#218032';\n  cell.style.borderColor = 'blac';\n  cell.style.display = 'block';\n  cell.style.borderStyle = 'solid';\n  cell.marginTop = '2px';\n  cell.marginBottom = '2px';\n  cell.marginRight = '2px';\n  cell.marginLeft = '2px';\n  cell.style.width = '100%';\n  cell.style.height = '33px';\n  const piece = document.createElement('button');\n  piece.style.borderRadius = '100px';\n  piece.style.width = '100%';\n  piece.style.height = '100%'; //check all up pieces\n\n  let control = 1;\n  let boolcontrol = index[0] + control > 0 && index[0] + control < 8 ? true : false;\n  let toChange = [];\n  let doChangeUP = false;\n\n  while (boolcontrol && board[index[0] + control][index[1]] != 0 && board[index[0] + control][index[1]] != 2) {\n    if (board[index[0] + control][index[1]] != board[index[0]][index[1]]) {\n      toChange.push([index[0] + control, index[1], board[index[0]][index[1]]]);\n    } else {\n      doChangeUP = toChange.length != 0 ? true : false;\n      boolcontrol = false;\n    }\n\n    if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all down pieces\n\n\n  let doChangeDOWN = false;\n  let doChangeDownRight = false;\n  let doChangeDownLeft = false;\n\n  try {\n    control = 1;\n    boolcontrol = index[0] - control > 0 && index[0] - control < 8 ? true : false;\n    toChange = [];\n\n    while (boolcontrol && board[index[0] - control][index[1]] != 0 && board[index[0] - control][index[1]] != 2) {\n      if (board[index[0] - control][index[1]] != board[index[0]][index[1]]) {\n        toChange.push([index[0] - control, index[1], board[index[0]][index[1]]]);\n      } else {\n        doChangeDOWN = toChange.length != 0 ? true : false;\n        ;\n        boolcontrol = false;\n      }\n\n      if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8) {\n        control = control + 1;\n      } else {\n        boolcontrol = false;\n      }\n    } //check all down and left pieces\n\n\n    control = 1;\n    boolcontrol = index[0] - control > 0 && index[0] - control < 8 && index[1] - control > 0 && index[1] - control < 8 ? true : false;\n    toChange = [];\n\n    while (boolcontrol && board[index[0] - control][index[1] - control] != 0 && board[index[0] - control][index[1] - control] != 2) {\n      if (board[index[0] - control][index[1] - control] != board[index[0]][index[1]]) {\n        toChange.push([index[0] - control, index[1] - control, board[index[0]][index[1]]]);\n      } else {\n        doChangeDownLeft = toChange.length != 0 ? true : false;\n        ;\n        boolcontrol = false;\n      }\n\n      if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8 && index[1] - control > 0 && index[1] - control < 8) {\n        control = control + 1;\n      } else {\n        boolcontrol = false;\n      }\n    } //check all down and right pieces\n\n\n    control = 1;\n    boolcontrol = index[0] - control > 0 && index[0] - control < 8 && index[1] + control > 0 && index[1] + control < 8 ? true : false;\n    toChange = [];\n\n    while (boolcontrol && board[index[0] - control][index[1] + control] != 0 && board[index[0] - control][index[1] + control] != 2) {\n      if (board[index[0] - control][index[1] + control] != board[index[0]][index[1]]) {\n        toChange.push([index[0] - control, index[1] + control, board[index[0]][index[1]]]);\n      } else {\n        doChangeDownRight = toChange.length != 0 ? true : false;\n        ;\n        boolcontrol = false;\n      }\n\n      if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8 && index[1] + control > 0 && index[1] + control < 8) {\n        control = control + 1;\n      } else {\n        boolcontrol = false;\n      }\n    }\n  } catch {\n    console.log('done');\n  } //check all left pieces\n\n\n  control = 1;\n  boolcontrol = index[1] - control > 0 && index[1] - control < 8 ? true : false;\n  toChange = [];\n  let doChangeLeft = false;\n\n  while (boolcontrol && board[index[0]][index[1] - control] != 0 && board[index[0]][index[1] - control] != 2) {\n    if (board[index[0]][index[1] - control] != board[index[0]][index[1]]) {\n      toChange.push([index[0], index[1] - control, board[index[0]][index[1]]]);\n    } else {\n      doChangeLeft = toChange.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[1] - control + 1 >= 0 && index[1] - control + 1 < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all right pieces\n\n\n  control = 1;\n  boolcontrol = index[1] + control > 0 && index[1] + control < 8 ? true : false;\n  toChange = [];\n  let doChangeRight = false;\n\n  while (boolcontrol && board[index[0]][index[1] + control] != 0 && board[index[0]][index[1] + control] != 2) {\n    if (board[index[0]][index[1] + control] != board[index[0]][index[1]]) {\n      toChange.push([index[0], index[1] + control, board[index[0]][index[1]]]);\n    } else {\n      doChangeRight = toChange.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[1] + control + 1 >= 0 && index[1] + control + 1 < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all up and right pieces\n\n\n  control = 1;\n  boolcontrol = index[0] + control > 0 && index[0] + control < 8 && index[1] + control > 0 && index[1] + control < 8 ? true : false;\n  toChange = [];\n  let doChangeUpRight = false;\n\n  while (boolcontrol && board[index[0] + control][index[1] + control] != 0 && board[index[0] + control][index[1] + control] != 2) {\n    if (board[index[0] + control][index[1] + control] != board[index[0]][index[1]]) {\n      toChange.push([index[0] + control, index[1] + control, board[index[0]][index[1]]]);\n    } else {\n      doChangeUpRight = toChange.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8 && index[1] + control > 0 && index[1] + control < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all up and left pieces\n\n\n  control = 1;\n  boolcontrol = index[0] + control > 0 && index[0] + control < 8 && index[1] - control > 0 && index[1] - control < 8 ? true : false;\n  toChange = [];\n  let doChangeUpLeft = false;\n\n  while (boolcontrol && board[index[0] + control][index[1] - control] != 0 && board[index[0] + control][index[1] - control] != 2) {\n    if (board[index[0] + control][index[1] - control] != board[index[0]][index[1]]) {\n      toChange.push([index[0] + control, index[1] - control, board[index[0]][index[1]]]);\n    } else {\n      doChangeUpLeft = toChange.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8 && index[1] - control > 0 && index[1] - control < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  }\n\n  const doChange = doChangeRight || doChangeLeft || doChangeDOWN || doChangeUP || doChangeUpLeft || doChangeUpRight || doChangeDownRight || doChangeDownLeft;\n\n  if (value === 0 || value === 2) {\n    piece.style.backgroundColor = '#218032';\n  } else if (value === 1) {\n    piece.style.backgroundColor = 'white';\n  } else if (value === -1) {\n    piece.style.backgroundColor = 'black';\n  }\n\n  if (doChange) {\n    piece.style.borderColor = 'black';\n  }\n\n  piece.onclick = () => {\n    //logic of the game\n    if (value === 2) {\n      board[index[0]][index[1]] = state.turn ? 1 : -1; //change color and all rows of the same color\n\n      if (doChangeUP) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeDOWN) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeLeft) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeRight) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeDownLeft) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeDownRight) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeUpRight) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeUpLeft) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChange) {\n        board[index[0]][index[1]] = state.turn ? 1 : -1; //change color and all rows of the same color\n        //change turn and count pieces in the table\n\n        state.turn = !state.turn; //allow following cells to be used so turn their value to 2s\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8) {\n          board[index[0] + 1][index[1]] = board[index[0] + 1][index[1]] == 0 && board[index[0] + 1][index[1]] != 1 && board[index[0] + 1][index[1]] != -1 ? 2 : board[index[0] + 1][index[1]];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8) {\n          board[index[0] - 1][index[1]] = board[index[0] - 1][index[1]] == 0 && board[index[0] - 1][index[1]] != 1 && board[index[0] - 1][index[1]] != -1 ? 2 : board[index[0] - 1][index[1]];\n        }\n\n        if (index[1] + 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0]][index[1] + 1] = board[index[0]][index[1] + 1] == 0 && board[index[0]][index[1] + 1] != 1 && board[index[0]][index[1] + 1] != -1 ? 2 : board[index[0]][index[1] + 1];\n        }\n\n        if (index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0]][index[1] - 1] = board[index[0]][index[1] - 1] == 0 && board[index[0]][index[1] - 1] != 1 && board[index[0]][index[1] - 1] != -1 ? 2 : board[index[0]][index[1] - 1];\n        }\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8 && index[1] + 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0] + 1][index[1] + 1] = board[index[0] + 1][index[1] + 1] == 0 && board[index[0] + 1][index[1] + 1] != 1 && board[index[0] + 1][index[1] + 1] != -1 ? 2 : board[index[0] + 1][index[1] + 1];\n        }\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8 && index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0] + 1][index[1] - 1] = board[index[0] + 1][index[1] - 1] == 0 && board[index[0] + 1][index[1] - 1] != 1 && board[index[0] + 1][index[1] - 1] != -1 ? 2 : board[index[0] + 1][index[1] - 1];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8 && index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0] - 1][index[1] - 1] = board[index[0] - 1][index[1] - 1] == 0 && board[index[0] - 1][index[1] - 1] != 1 && board[index[0] - 1][index[1] - 1] != -1 ? 2 : board[index[0] - 1][index[1] - 1];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8 && index[1] - 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0] - 1][index[1] + 1] = board[index[0] - 1][index[1] + 1] == 0 && board[index[0] - 1][index[1] + 1] != 1 && board[index[0] - 1][index[1] + 1] != -1 ? 2 : board[index[0] - 1][index[1] + 1];\n        }\n      } else {\n        board[index[0]][index[1]] = 2;\n        alert(\"INVALID MOVE\");\n      }\n\n      let whites = 0;\n      let blacks = 0;\n      let end_of_game = 0;\n      board.map((row, irow) => {\n        row.map((column, icolumn) => {\n          if (column == 1) {\n            whites = whites + 1;\n          } else if (column == -1) {\n            blacks = blacks + 1;\n          } else if (column == 2) {\n            end_of_game = end_of_game + 1;\n          }\n        });\n      });\n      let message = '';\n\n      if (end_of_game == 0) {\n        if (whites != blacks) {\n          //DRAWS\n          message = whites > blacks ? 'WHTE HAS WON' : 'BLACK HAS WON'; //Message for show winner\t\n        } else {\n          message = \"IT'S A DRAW\";\n        }\n\n        state = {\n          turn: true,\n          board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 1, -1, 2, 0, 0], [0, 0, 2, -1, 1, 2, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n        };\n        alert(message); //alert who won the game\n      }\n\n      root.innerHTML = '';\n      render(root, state); //Restart the game\n    } else {\n      alert(\"INVALID MOVE\");\n    }\n  };\n\n  cell.appendChild(piece);\n  return cell;\n};\n\nconst render = (root, state) => {\n  //Design of the page\n  const header = document.createElement('div');\n  header.style.backgroundColor = 'black';\n  header.style.minWidth = '330px';\n  header.style.height = '175px';\n  header.style.display = 'flex';\n  header.style.flexDirection = 'column';\n  header.style.justifyContent = 'center';\n  header.style.alignItems = 'center';\n  header.style.overflow = 'auto';\n  const header_tittle = document.createElement('h1');\n  const tittle_textNode = document.createTextNode('OTHELLO');\n  header_tittle.appendChild(tittle_textNode);\n  header_tittle.style.backgroundColor = 'black';\n  header_tittle.style.color = 'white';\n  header_tittle.style.fontSize = '45px';\n  header.appendChild(header_tittle);\n  const author = document.createElement('h1');\n  const author_textNode = document.createTextNode('Made by: SUULCODER');\n  author.appendChild(author_textNode);\n  author.style.backgroundColor = 'black';\n  author.style.color = 'white';\n  author.style.fontSize = '10px';\n  author.style.marginBottom = '15px';\n  header.appendChild(author);\n  const body = document.createElement('div');\n  body.style.backgroundColor = 'black';\n  body.style.minWidth = '330px';\n  body.style.height = '1000px';\n  body.style.display = 'flex';\n  header.style.flexDirection = 'column';\n  body.style.justifyContent = 'center';\n  const board = document.createElement('div');\n  board.style.backgroundColor = 'green';\n  board.style.width = '295px';\n  board.style.height = '312px';\n  board.style.marginTop = '91px';\n  board.style.overflow = 'auto';\n  const currentState = document.createElement('div');\n  const curr_h1 = document.createElement('h1');\n  const curr_circle = document.createElement('div');\n  const turn = state.turn ? 'white' : 'black';\n  const currentState_textNode = document.createTextNode('turn: ' + turn);\n  currentState.style.display = 'flex';\n  currentState.style.minWidth = '330px';\n  curr_h1.appendChild(currentState_textNode);\n  currentState.style.backgroundColor = '#218032';\n  currentState.style.justifyContent = 'center';\n  currentState.style.color = 'white';\n  curr_h1.style.fontSize = '20px';\n  curr_circle.style.backgroundColor = turn;\n  curr_circle.style.borderRadius = '100px';\n  curr_circle.style.height = '15px';\n  curr_circle.style.width = '15px';\n  curr_circle.style.padding = '7px';\n  curr_circle.style.marginLeft = '10px';\n  curr_circle.style.marginTop = '10px';\n  currentState.appendChild(curr_h1);\n  currentState.appendChild(curr_circle);\n  let whites = 0;\n  let blacks = 0;\n  state.board.map((row, irow) => {\n    row.map((column, icolumn) => {\n      if (column == 1) {\n        whites = whites + 1;\n      } else if (column == -1) {\n        blacks = blacks + 1;\n      }\n    });\n  });\n  const currentwinner = document.createElement('div');\n  const curr_whites = document.createElement('h1');\n  const curr_blacks = document.createElement('h1');\n  const white_circle = document.createElement('div');\n  const black_circle = document.createElement('div');\n  const white_textNode = document.createTextNode(whites);\n  const black_textNode = document.createTextNode(blacks);\n  currentwinner.style.display = 'flex';\n  currentwinner.style.marginTop = '2px';\n  currentwinner.style.minWidth = '330px';\n  curr_whites.appendChild(white_textNode);\n  curr_blacks.appendChild(black_textNode);\n  currentwinner.style.backgroundColor = '#218032';\n  currentwinner.style.justifyContent = 'center';\n  currentwinner.style.color = 'white';\n  curr_whites.style.fontSize = '12px';\n  curr_blacks.style.fontSize = '12px';\n  white_circle.style.backgroundColor = 'white';\n  black_circle.style.backgroundColor = 'black';\n  white_circle.style.borderRadius = '100px';\n  black_circle.style.borderRadius = '100px';\n  white_circle.style.height = '5px';\n  white_circle.style.width = '5px';\n  white_circle.style.padding = '7px';\n  white_circle.style.marginLeft = '10px';\n  white_circle.style.marginRight = '10px';\n  white_circle.style.marginTop = '7px';\n  black_circle.style.height = '5px';\n  black_circle.style.width = '5px';\n  black_circle.style.padding = '7px';\n  black_circle.style.marginLeft = '10px';\n  black_circle.style.marginRight = '10px';\n  black_circle.style.marginTop = '7px';\n  currentwinner.appendChild(white_circle);\n  currentwinner.appendChild(curr_whites);\n  currentwinner.appendChild(black_circle);\n  currentwinner.appendChild(curr_blacks);\n  state.board.map((row, irow) => row.map((column, icolumn) => renderCell({\n    value: column,\n    index: [irow, icolumn],\n    state: state\n  }))).map(my_row => {\n    const curr_row = document.createElement('div');\n    curr_row.style.display = 'flex';\n    my_row.forEach(cell => curr_row.appendChild(cell));\n    board.appendChild(curr_row);\n  });\n  body.appendChild(board);\n  root.appendChild(header);\n  root.appendChild(currentState);\n  root.appendChild(currentwinner);\n  root.appendChild(body);\n};\n\nconst state = {\n  //State of the game. \n  turn: true,\n  board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 1, -1, 2, 0, 0], [0, 0, 2, -1, 1, 2, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n};\nrender(root, state);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÑO WEB/OTHELLO/src/index.js"],"names":["root","document","getElementById","renderCell","value","index","state","board","cell","createElement","style","backgroundColor","borderColor","display","borderStyle","marginTop","marginBottom","marginRight","marginLeft","width","height","piece","borderRadius","control","boolcontrol","toChange","doChangeUP","push","length","doChangeDOWN","doChangeDownRight","doChangeDownLeft","console","log","doChangeLeft","doChangeRight","doChangeUpRight","doChangeUpLeft","doChange","onclick","turn","map","myList","alert","whites","blacks","end_of_game","row","irow","column","icolumn","message","innerHTML","render","appendChild","header","minWidth","flexDirection","justifyContent","alignItems","overflow","header_tittle","tittle_textNode","createTextNode","color","fontSize","author","author_textNode","body","currentState","curr_h1","curr_circle","currentState_textNode","padding","currentwinner","curr_whites","curr_blacks","white_circle","black_circle","white_textNode","black_textNode","my_row","curr_row","forEach"],"mappings":"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","sourcesContent":["/*\n\tUNIVERSIDAD DEL VALLE DE GUATEMALA\n\tOTHELLO\n\tDiseño WEB\n\tSAÚL CONTRERAS (SUULCODER)\n\n*/\nconst root = document.getElementById('root');\t\t\t\t\t\t\t\t\t//root element from html\n\nconst renderCell = ({\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//design for each cell\n\tvalue,\n\tindex,\n\tstate\n}) => {\n\tconst { board } = state;\n\tconst cell = document.createElement('div')\n\tcell.style.backgroundColor = '#218032'\n\tcell.style.borderColor = 'blac'\n\tcell.style.display = 'block'\n\tcell.style.borderStyle = 'solid'\n\tcell.marginTop = '2px'\n\tcell.marginBottom = '2px'\n\tcell.marginRight = '2px'\n\tcell.marginLeft = '2px'\n\tcell.style.width='100%'\n\tcell.style.height='33px'\n\tconst piece = document.createElement('button')\n\tpiece.style.borderRadius = '100px'\n\tpiece.style.width = '100%'\n\tpiece.style.height = '100%'\n\t//check all up pieces\n\tlet control = 1;\n\tlet boolcontrol = (index[0]+control>0 && index[0]+control<8) ? true : false;\n\tlet toChange = [];\n\tlet doChangeUP = false;\n\twhile(boolcontrol && board[index[0]+control][index[1]]!=0 && board[index[0]+control][index[1]]!=2){\n\t\tif(board[index[0]+control][index[1]]!=board[index[0]][index[1]]){\n\t\t\ttoChange.push([index[0]+control,index[1],board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeUP = (toChange.length!=0) ? true : false;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[0]+control+1>=0 && index[0]+control+1<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\n\t//check all down pieces\n\tlet doChangeDOWN = false;\n\tlet doChangeDownRight = false;\n\tlet doChangeDownLeft = false;\n\n\ttry{\n\t\tcontrol = 1;\n\t\tboolcontrol = (index[0]-control>0 && index[0]-control<8) ? true : false;\n\t\ttoChange = [];\n\t\twhile(boolcontrol && board[index[0]-control][index[1]]!=0 && board[index[0]-control][index[1]]!=2){\n\t\t\tif(board[index[0]-control][index[1]]!=board[index[0]][index[1]]){\n\t\t\t\ttoChange.push([index[0]-control,index[1],board[index[0]][index[1]]]);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdoChangeDOWN = (toChange.length!=0) ? true : false;;\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8){\n\t\t\t\tcontrol = control + 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t}\n\n\t\t//check all down and left pieces\n\t\tcontrol = 1;\n\t\tboolcontrol = (index[0]-control>0 && index[0]-control<8 && index[1]-control>0 && index[1]-control<8) ? true : false;\n\t\ttoChange = [];\n\t\t\n\t\twhile(boolcontrol && board[index[0]-control][index[1]-control]!=0 && board[index[0]-control][index[1]-control]!=2){\n\t\t\tif(board[index[0]-control][index[1]-control]!=board[index[0]][index[1]]){\n\t\t\t\ttoChange.push([index[0]-control,index[1]-control,board[index[0]][index[1]]]);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdoChangeDownLeft = (toChange.length!=0) ? true : false;;\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8 && index[1]-control>0 && index[1]-control<8){\n\t\t\t\tcontrol = control + 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t}\n\t \t//check all down and right pieces\n\t \tcontrol = 1;\n\t\tboolcontrol = (index[0]-control>0 && index[0]-control<8 && index[1]+control>0 && index[1]+control<8) ? true : false;\n\t\ttoChange = [];\n\t\t\n\t\twhile(boolcontrol && board[index[0]-control][index[1]+control]!=0 && board[index[0]-control][index[1]+control]!=2){\n\t\t\tif(board[index[0]-control][index[1]+control]!=board[index[0]][index[1]]){\n\t\t\t\ttoChange.push([index[0]-control,index[1]+control,board[index[0]][index[1]]]);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdoChangeDownRight = (toChange.length!=0) ? true : false;;\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8 && index[1]+control>0 && index[1]+control<8){\n\t\t\t\tcontrol = control + 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t}\n\t}\n\tcatch{\n\t\tconsole.log('done')\n\t}\n\n\t//check all left pieces\n\tcontrol = 1;\n\tboolcontrol = (index[1]-control>0 && index[1]-control<8) ? true : false;\n\ttoChange = [];\n\tlet doChangeLeft = false;\n\twhile(boolcontrol && board[index[0]][index[1]-control]!=0 && board[index[0]][index[1]-control]!=2){\n\t\tif(board[index[0]][index[1]-control]!=board[index[0]][index[1]]){\n\t\t\ttoChange.push([index[0],index[1]-control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeLeft = (toChange.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[1]-control+1>=0 && index[1]-control+1<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\t//check all right pieces\n\tcontrol = 1;\n\tboolcontrol = (index[1]+control>0 && index[1]+control<8) ? true : false;\n\ttoChange = [];\n\tlet doChangeRight = false;\n\twhile(boolcontrol && board[index[0]][index[1]+control]!=0 && board[index[0]][index[1]+control]!=2){\n\t\tif(board[index[0]][index[1]+control]!=board[index[0]][index[1]]){\n\t\t\ttoChange.push([index[0],index[1]+control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeRight = (toChange.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[1]+control+1>=0 && index[1]+control+1<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\n\t//check all up and right pieces\n\tcontrol = 1;\n\tboolcontrol = (index[0]+control>0 && index[0]+control<8 && index[1]+control>0 && index[1]+control<8) ? true : false;\n\ttoChange = [];\n\tlet doChangeUpRight = false;\n\twhile(boolcontrol && board[index[0]+control][index[1]+control]!=0 && board[index[0]+control][index[1]+control]!=2){\n\t\tif(board[index[0]+control][index[1]+control]!=board[index[0]][index[1]]){\n\t\t\ttoChange.push([index[0]+control,index[1]+control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeUpRight = (toChange.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[0]+control+1>=0 && index[0]+control+1<8 && index[1]+control>0 && index[1]+control<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\t//check all up and left pieces\n\tcontrol = 1;\n\tboolcontrol = (index[0]+control>0 && index[0]+control<8 && index[1]-control>0 && index[1]-control<8) ? true : false;\n\ttoChange = [];\n\tlet doChangeUpLeft = false;\n\twhile(boolcontrol && board[index[0]+control][index[1]-control]!=0 && board[index[0]+control][index[1]-control]!=2){\n\t\tif(board[index[0]+control][index[1]-control]!=board[index[0]][index[1]]){\n\t\t\ttoChange.push([index[0]+control,index[1]-control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeUpLeft = (toChange.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[0]+control+1>=0 && index[0]+control+1<8 && index[1]-control>0 && index[1]-control<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\tconst doChange = doChangeRight || doChangeLeft || doChangeDOWN || doChangeUP || doChangeUpLeft || doChangeUpRight || doChangeDownRight || doChangeDownLeft;\n\n\n\tif(value===0 || value===2){\n\t\tpiece.style.backgroundColor = '#218032'\n\t}\n\telse if(value===1){\n\t\tpiece.style.backgroundColor = 'white'\n\t}\n\telse if(value===-1){\n\t\tpiece.style.backgroundColor = 'black'\n\t}\n\tif(doChange){\n\t\tpiece.style.borderColor = 'black'\t\n\t}\n\t\n\n\tpiece.onclick = () => {\t\t\t\t\t\t\t\t\t\t\t\t\t\t//logic of the game\n\t\tif(value===2){\n\t\t\tboard[index[0]][index[1]] = (state.turn) ? 1 : -1;\t\t\t\t\t//change color and all rows of the same color\n\t\t\tif(doChangeUP){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeDOWN){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\t\n\t\t\tif(doChangeLeft){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeRight){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeDownLeft){\n\t\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t\t}\n\t\t\tif(doChangeDownRight){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\t\n\t\t\tif(doChangeUpRight){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeUpLeft){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChange){\n\t\t\t\tboard[index[0]][index[1]] = (state.turn) ? 1 : -1;\t\t\t\t\t//change color and all rows of the same color\n\t\t\t\t//change turn and count pieces in the table\n\t\t\t\tstate.turn = !state.turn;\n\t\t\t\t//allow following cells to be used so turn their value to 2s\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]] = (board[index[0]+1][index[1]]==0 && board[index[0]+1][index[1]]!=1 && board[index[0]+1][index[1]]!=-1) ? 2 : board[index[0]+1][index[1]];\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]] = (board[index[0]-1][index[1]]==0 && board[index[0]-1][index[1]]!=1 && board[index[0]-1][index[1]]!=-1) ? 2 : board[index[0]-1][index[1]];\t\n\t\t\t\t}\n\t\t\t\tif(index[1]+1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]][index[1]+1] = (board[index[0]][index[1]+1]==0 && board[index[0]][index[1]+1]!=1 && board[index[0]][index[1]+1]!=-1) ? 2 : board[index[0]][index[1]+1];\t\n\t\t\t\t}\n\t\t\t\tif(index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]][index[1]-1] = (board[index[0]][index[1]-1]==0 && board[index[0]][index[1]-1]!=1 && board[index[0]][index[1]-1]!=-1) ? 2 : board[index[0]][index[1]-1];\t\n\t\t\t\t}\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8 && index[1]+1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]+1] = (board[index[0]+1][index[1]+1]==0 && board[index[0]+1][index[1]+1]!=1 && board[index[0]+1][index[1]+1]!=-1) ? 2 : board[index[0]+1][index[1]+1];\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8 && index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]-1] = (board[index[0]+1][index[1]-1]==0 && board[index[0]+1][index[1]-1]!=1 && board[index[0]+1][index[1]-1]!=-1) ? 2 : board[index[0]+1][index[1]-1];\n\t\t\t\t}\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8 && index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]-1] = (board[index[0]-1][index[1]-1]==0 && board[index[0]-1][index[1]-1]!=1 && board[index[0]-1][index[1]-1]!=-1) ? 2 : board[index[0]-1][index[1]-1];\n\t\t\t\t}\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8 && index[1]-1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]+1] = (board[index[0]-1][index[1]+1]==0 && board[index[0]-1][index[1]+1]!=1 && board[index[0]-1][index[1]+1]!=-1) ? 2 : board[index[0]-1][index[1]+1];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboard[index[0]][index[1]] = 2;\n\t\t\t\talert(\"INVALID MOVE\")\n\t\t\t}\n\t\t\tlet whites = 0;\n\t\t\tlet blacks = 0;\n\t\t\tlet end_of_game = 0;\n\t\t\tboard.map((row,irow) => {\n\t\t\t\trow.map((column,icolumn) => {\n\t\t\t\t\tif(column==1){\n\t\t\t\t\t\twhites = whites + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(column==-1){\n\t\t\t\t\t\tblacks = blacks + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(column==2){\n\t\t\t\t\t\tend_of_game = end_of_game + 1;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tlet message = '';\n\t\t\tif(end_of_game==0){\n\t\t\t\tif(whites!=blacks){                                                                     //DRAWS\n\t\t\t\t\tmessage = (whites>blacks) ? 'WHTE HAS WON' : 'BLACK HAS WON'\t\t\t\t\t\t//Message for show winner\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmessage = \"IT'S A DRAW\"\n\t\t\t\t}\n\t\t\t\tstate = {\n\t\t\t\t\tturn: true,\n\t\t\t\t\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t\t\t\t\t[0,0,2,1,-1,2,0,0],\n\t\t\t\t\t\t\t[0,0,2,-1,1,2,0,0],\n\t\t\t\t\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0]\n\t\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\talert(message)//alert who won the game\n\t\t\t}\n\t\t\troot.innerHTML = '';\n        \trender(root, state);//Restart the game\n\t\t}\n\t\telse{\n\t\t\talert(\"INVALID MOVE\")\n\t\t}\n\t};\n\tcell.appendChild(piece)\n\treturn cell\n}\n\nconst render = (root, state) =>{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Design of the page\n\tconst header = document.createElement('div');\n\theader.style.backgroundColor='black';\n\theader.style.minWidth = '330px';\n\theader.style.height = '175px';\n\theader.style.display = 'flex';\n\theader.style.flexDirection = 'column'\n\theader.style.justifyContent = 'center';\n\theader.style.alignItems = 'center';\n\theader.style.overflow = 'auto';\n\n\tconst header_tittle = document.createElement('h1');\n\tconst tittle_textNode = document.createTextNode('OTHELLO')\n\theader_tittle.appendChild(tittle_textNode)\n\theader_tittle.style.backgroundColor = 'black'\n\theader_tittle.style.color = 'white'\n\theader_tittle.style.fontSize = '45px';\n\theader.appendChild(header_tittle)\n\n\tconst author = document.createElement('h1');\n\tconst author_textNode = document.createTextNode('Made by: SUULCODER')\n\tauthor.appendChild(author_textNode)\n\tauthor.style.backgroundColor = 'black'\n\tauthor.style.color = 'white'\n\tauthor.style.fontSize = '10px';\n\tauthor.style.marginBottom = '15px';\n\theader.appendChild(author)\n\n\tconst body = document.createElement('div');\n\tbody.style.backgroundColor = 'black'\n\tbody.style.minWidth = '330px';\n\tbody.style.height = '1000px'\n\tbody.style.display = 'flex';\n\theader.style.flexDirection = 'column'\n\tbody.style.justifyContent = 'center';\n\n\tconst board = document.createElement('div');\n\tboard.style.backgroundColor = 'green'\n\tboard.style.width = '295px';\n\tboard.style.height = '312px';\n\tboard.style.marginTop = '91px';\n\tboard.style.overflow = 'auto'\n\n\tconst currentState = document.createElement('div');\n\tconst curr_h1 = document.createElement('h1')\n\tconst curr_circle = document.createElement('div')\n\tconst turn = (state.turn) ? 'white' : 'black'\n\tconst currentState_textNode = document.createTextNode('turn: ' + turn)\n\tcurrentState.style.display = 'flex'\n\tcurrentState.style.minWidth = '330px';\n\tcurr_h1.appendChild(currentState_textNode)\n\tcurrentState.style.backgroundColor = '#218032'\n\tcurrentState.style.justifyContent = 'center'\n\tcurrentState.style.color = 'white'\n\tcurr_h1.style.fontSize = '20px';\n\tcurr_circle.style.backgroundColor = turn;\n\tcurr_circle.style.borderRadius = '100px';\n\tcurr_circle.style.height = '15px'\n\tcurr_circle.style.width = '15px'\n\tcurr_circle.style.padding = '7px'\n\tcurr_circle.style.marginLeft = '10px'\n\tcurr_circle.style.marginTop = '10px'\n\tcurrentState.appendChild(curr_h1)\n\tcurrentState.appendChild(curr_circle)\n\n\tlet whites = 0;\n\tlet blacks = 0;\n\tstate.board.map((row,irow) => {\n\t\trow.map((column,icolumn) => {\n\t\t\tif(column==1){\n\t\t\t\twhites = whites + 1;\n\t\t\t}\n\t\t\telse if(column==-1){\n\t\t\t\tblacks = blacks + 1;\n\t\t\t}\n\t\t})\n\t})\n\n\tconst currentwinner = document.createElement('div');\n\tconst curr_whites = document.createElement('h1')\n\tconst curr_blacks = document.createElement('h1')\n\tconst white_circle = document.createElement('div')\n\tconst black_circle = document.createElement('div')\n\tconst white_textNode = document.createTextNode(whites)\n\tconst black_textNode = document.createTextNode(blacks)\n\tcurrentwinner.style.display = 'flex'\n\tcurrentwinner.style.marginTop = '2px';\n\tcurrentwinner.style.minWidth = '330px';\n\tcurr_whites.appendChild(white_textNode)\n\tcurr_blacks.appendChild(black_textNode)\n\tcurrentwinner.style.backgroundColor = '#218032'\n\tcurrentwinner.style.justifyContent = 'center'\n\tcurrentwinner.style.color = 'white'\n\tcurr_whites.style.fontSize = '12px';\n\tcurr_blacks.style.fontSize = '12px';\n\twhite_circle.style.backgroundColor = 'white';\n\tblack_circle.style.backgroundColor = 'black';\n\twhite_circle.style.borderRadius = '100px';\n\tblack_circle.style.borderRadius = '100px';\n\twhite_circle.style.height = '5px'\n\twhite_circle.style.width = '5px'\n\twhite_circle.style.padding = '7px'\n\twhite_circle.style.marginLeft = '10px'\n\twhite_circle.style.marginRight = '10px'\n\twhite_circle.style.marginTop = '7px'\n\tblack_circle.style.height = '5px'\n\tblack_circle.style.width = '5px'\n\tblack_circle.style.padding = '7px'\n\tblack_circle.style.marginLeft = '10px'\n\tblack_circle.style.marginRight = '10px'\n\tblack_circle.style.marginTop = '7px'\n\tcurrentwinner.appendChild(white_circle)\n\tcurrentwinner.appendChild(curr_whites)\n\tcurrentwinner.appendChild(black_circle)\n\tcurrentwinner.appendChild(curr_blacks)\n\n\tstate.board.map((row, irow) =>\n\t\trow.map((column,icolumn) => renderCell({\n\t\t\tvalue: column,\n\t\t\tindex: [irow,icolumn],\n\t\t\tstate: state\n\t\t}))).map(my_row =>{\t\n\t\t\tconst curr_row = document.createElement('div')\n\t\t\tcurr_row.style.display = 'flex'\n\t\t\tmy_row.forEach(\n\t\t\t\tcell => curr_row.appendChild(cell),\n\t\t\t)\n\t\t\tboard.appendChild(curr_row)\n\t});\n\n\tbody.appendChild(board);\n\troot.appendChild(header);\n\troot.appendChild(currentState);\n\troot.appendChild(currentwinner);\n\troot.appendChild(body);\n};\n\n\nconst state = {\t\t\t\t\t\t\t\t//State of the game. \n\tturn: true,\n\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t[0,0,2,1,-1,2,0,0],\n\t\t\t[0,0,2,-1,1,2,0,0],\n\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0]\n\t\t]\n};\nrender(root,state);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n\tUNIVERSIDAD DEL VALLE DE GUATEMALA\n\tOTHELLO\n\tDiseño WEB\n\tSAÚL CONTRERAS (SUULCODER)\n\n*/\nconst root = document.getElementById('root'); //root element from html\n\nconst renderCell = ({\n  //design for each cell\n  value,\n  index,\n  state\n}) => {\n  const cell = document.createElement('div');\n  cell.style.backgroundColor = '#218032';\n  cell.style.borderColor = 'blac';\n  cell.style.display = 'block';\n  cell.style.borderStyle = 'solid';\n  cell.marginTop = '2px';\n  cell.marginBottom = '2px';\n  cell.marginRight = '2px';\n  cell.marginLeft = '2px';\n  cell.style.width = '100%';\n  cell.style.height = '33px';\n  const piece = document.createElement('button');\n  piece.style.borderRadius = '100px';\n  piece.style.width = '100%';\n  piece.style.height = '100%';\n\n  if (value === 0 || value === 2) {\n    piece.style.backgroundColor = '#218032';\n  } else if (value === 1) {\n    piece.style.backgroundColor = 'white';\n  } else if (value === -1) {\n    piece.style.backgroundColor = 'black';\n  }\n\n  piece.onclick = () => {\n    //logic of the game\n    const _state = state,\n          board = _state.board;\n\n    if (value === 2) {\n      //check all up pieces\n      let control = 1;\n      let boolcontrol = index[0] + control > 0 && index[0] + control < 8 ? true : false;\n      let toChange = [];\n      let doChangeUP = false;\n\n      while (boolcontrol && board[index[0] + control][index[1]] != 0 && board[index[0] + control][index[1]] != 2) {\n        if (board[index[0] + control][index[1]] != board[index[0]][index[1]]) {\n          toChange.push([index[0] + control, index[1], board[index[0]][index[1]]]);\n        } else {\n          doChange = true;\n        }\n\n        if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8) {\n          control = control + 1;\n        } else {\n          boolcontrol = false;\n        }\n      }\n\n      if (doChangeUP) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      } //check all down pieces\n\n\n      control = 1;\n      boolcontrol = index[0] + control > 0 && index[0] + control < 8 ? true : false;\n      toChange = [];\n      let doChangeDOWN = false;\n\n      while (boolcontrol && board[index[0] - control][index[1]] != 0 && board[index[0] - control][index[1]] != 2) {\n        if (board[index[0] - control][index[1]] != board[index[0]][index[1]]) {\n          toChange.push([index[0] - control, index[1], board[index[0]][index[1]]]);\n        } else {\n          doChangeDOWN = true;\n        }\n\n        if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8) {\n          control = control + 1;\n        } else {\n          boolcontrol = false;\n        }\n      }\n\n      if (doChangeDOWN) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      } //check all down pieces\n\n\n      control = 1;\n      boolcontrol = index[0] + control > 0 && index[0] + control < 8 ? true : false;\n      toChange = [];\n      let doChangeLeft = false;\n\n      while (boolcontrol && board[index[0] - control][index[1]] != 0 && board[index[0] - control][index[1]] != 2) {\n        if (board[index[0] - control][index[1]] != board[index[0]][index[1]]) {\n          toChange.push([index[0] - control, index[1], board[index[0]][index[1]]]);\n        } else {\n          doChangeLeft = true;\n        }\n\n        if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8) {\n          control = control + 1;\n        } else {\n          boolcontrol = false;\n        }\n      }\n\n      if (doChangeDOWN) {\n        toChange.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChange) {\n        board[index[0]][index[1]] = state.turn ? 1 : -1; //change color and all rows of the same color\n        //change turn and count pieces in the table\n\n        state.turn = !state.turn; //allow following cells to be used so turn their value to 2s\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8) {\n          board[index[0] + 1][index[1]] = board[index[0] + 1][index[1]] == 0 && board[index[0] + 1][index[1]] != 1 && board[index[0] + 1][index[1]] != -1 ? 2 : board[index[0] + 1][index[1]];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8) {\n          board[index[0] - 1][index[1]] = board[index[0] - 1][index[1]] == 0 && board[index[0] - 1][index[1]] != 1 && board[index[0] - 1][index[1]] != -1 ? 2 : board[index[0] - 1][index[1]];\n        }\n\n        if (index[1] + 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0]][index[1] + 1] = board[index[0]][index[1] + 1] == 0 && board[index[0]][index[1] + 1] != 1 && board[index[0]][index[1] + 1] != -1 ? 2 : board[index[0]][index[1] + 1];\n        }\n\n        if (index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0]][index[1] - 1] = board[index[0]][index[1] - 1] == 0 && board[index[0]][index[1] - 1] != 1 && board[index[0]][index[1] - 1] != -1 ? 2 : board[index[0]][index[1] - 1];\n        }\n      } else {\n        alert(\"INVALID MOVE\");\n      }\n\n      let whites = 0;\n      let blacks = 0;\n      let end_of_game = 0;\n      board.map((row, irow) => {\n        row.map((column, icolumn) => {\n          if (column == 1) {\n            whites = whites + 1;\n          } else if (column == -1) {\n            blacks = blacks + 1;\n          } else if (column == 2) {\n            end_of_game = end_of_game + 1;\n          }\n        });\n      });\n      let message = '';\n\n      if (end_of_game == 0) {\n        if (whites != blacks) {\n          //DRAWS\n          message = whites > blacks ? 'WHTE HAS WON' : 'BLACK HAS WON'; //Message for show winner\t\n        } else {\n          message = \"IT'S A DRAW\";\n        }\n\n        state = {\n          turn: true,\n          board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 1, -1, 2, 0, 0], [0, 0, 2, -1, 1, 2, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n        };\n        alert(message); //alert who won the game\n      }\n\n      root.innerHTML = '';\n      render(root, state); //Restart the game\n    }\n  };\n\n  cell.appendChild(piece);\n  return cell;\n};\n\nconst render = (root, state) => {\n  //Design of the page\n  const header = document.createElement('div');\n  header.style.backgroundColor = 'black';\n  header.style.minWidth = '330px';\n  header.style.height = '175px';\n  header.style.display = 'flex';\n  header.style.flexDirection = 'column';\n  header.style.justifyContent = 'center';\n  header.style.alignItems = 'center';\n  header.style.overflow = 'auto';\n  const header_tittle = document.createElement('h1');\n  const tittle_textNode = document.createTextNode('OTHELLO');\n  header_tittle.appendChild(tittle_textNode);\n  header_tittle.style.backgroundColor = 'black';\n  header_tittle.style.color = 'white';\n  header_tittle.style.fontSize = '45px';\n  header.appendChild(header_tittle);\n  const author = document.createElement('h1');\n  const author_textNode = document.createTextNode('Made by: SUULCODER');\n  author.appendChild(author_textNode);\n  author.style.backgroundColor = 'black';\n  author.style.color = 'white';\n  author.style.fontSize = '10px';\n  author.style.marginBottom = '15px';\n  header.appendChild(author);\n  const body = document.createElement('div');\n  body.style.backgroundColor = 'black';\n  body.style.minWidth = '330px';\n  body.style.height = '1000px';\n  body.style.display = 'flex';\n  body.style.justifyContent = 'center';\n  body.style.marginTop = '2px';\n  const board = document.createElement('div');\n  board.style.backgroundColor = 'green';\n  board.style.width = '295px';\n  board.style.height = '312px';\n  board.style.marginTop = '91px';\n  board.style.overflow = 'auto';\n  state.board.map((row, irow) => row.map((column, icolumn) => renderCell({\n    value: column,\n    index: [irow, icolumn],\n    state: state\n  }))).map(my_row => {\n    const curr_row = document.createElement('div');\n    curr_row.style.display = 'flex';\n    my_row.forEach(cell => curr_row.appendChild(cell));\n    board.appendChild(curr_row);\n  });\n  body.appendChild(board);\n  root.appendChild(header);\n  root.appendChild(body);\n};\n\nconst state = {\n  //State of the game. \n  turn: true,\n  board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 1, -1, 2, 0, 0], [0, 0, 2, -1, 1, 2, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n};\nrender(root, state);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÑO WEB/OTHELLO/src/index.js"],"names":["root","document","getElementById","renderCell","value","index","state","cell","createElement","style","backgroundColor","borderColor","display","borderStyle","marginTop","marginBottom","marginRight","marginLeft","width","height","piece","borderRadius","onclick","board","control","boolcontrol","toChange","doChangeUP","push","doChange","map","myList","doChangeDOWN","doChangeLeft","turn","alert","whites","blacks","end_of_game","row","irow","column","icolumn","message","innerHTML","render","appendChild","header","minWidth","flexDirection","justifyContent","alignItems","overflow","header_tittle","tittle_textNode","createTextNode","color","fontSize","author","author_textNode","body","my_row","curr_row","forEach"],"mappings":"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","sourcesContent":["/*\n\tUNIVERSIDAD DEL VALLE DE GUATEMALA\n\tOTHELLO\n\tDiseño WEB\n\tSAÚL CONTRERAS (SUULCODER)\n\n*/\nconst root = document.getElementById('root');\t\t\t\t\t\t\t\t\t//root element from html\n\nconst renderCell = ({\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//design for each cell\n\tvalue,\n\tindex,\n\tstate\n}) => {\n\tconst cell = document.createElement('div')\n\tcell.style.backgroundColor = '#218032'\n\tcell.style.borderColor = 'blac'\n\tcell.style.display = 'block'\n\tcell.style.borderStyle = 'solid'\n\tcell.marginTop = '2px'\n\tcell.marginBottom = '2px'\n\tcell.marginRight = '2px'\n\tcell.marginLeft = '2px'\n\tcell.style.width='100%'\n\tcell.style.height='33px'\n\tconst piece = document.createElement('button')\n\tpiece.style.borderRadius = '100px'\n\tpiece.style.width = '100%'\n\tpiece.style.height = '100%'\n\tif(value===0 || value===2){\n\t\tpiece.style.backgroundColor = '#218032'\n\t}\n\telse if(value===1){\n\t\tpiece.style.backgroundColor = 'white'\n\t}\n\telse if(value===-1){\n\t\tpiece.style.backgroundColor = 'black'\n\t}\n\n\tpiece.onclick = () => {\t\t\t\t\t\t\t\t\t\t\t\t\t\t//logic of the game\n\t\tconst { board } = state;\n\t\tif(value===2){\n\t\t\t//check all up pieces\n\t\t\tlet control = 1;\n\t\t\tlet boolcontrol = (index[0]+control>0 && index[0]+control<8) ? true : false;\n\t\t\tlet toChange = [];\n\t\t\tlet doChangeUP = false;\n\t\t\twhile(boolcontrol && board[index[0]+control][index[1]]!=0 && board[index[0]+control][index[1]]!=2){\n\t\t\t\tif(board[index[0]+control][index[1]]!=board[index[0]][index[1]]){\n\t\t\t\t\ttoChange.push([index[0]+control,index[1],board[index[0]][index[1]]]);\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdoChange = true;\n\t\t\t\t}\n\t\t\t\tif (index[0]+control+1>=0 && index[0]+control+1<8){\n\t\t\t\t\tcontrol = control + 1\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tboolcontrol = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(doChangeUP){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\t//check all down pieces\n\t\t\tcontrol = 1;\n\t\t\tboolcontrol = (index[0]+control>0 && index[0]+control<8) ? true : false;\n\t\t\ttoChange = [];\n\t\t\tlet doChangeDOWN = false;\n\t\t\twhile(boolcontrol && board[index[0]-control][index[1]]!=0 && board[index[0]-control][index[1]]!=2){\n\t\t\t\tif(board[index[0]-control][index[1]]!=board[index[0]][index[1]]){\n\t\t\t\t\ttoChange.push([index[0]-control,index[1],board[index[0]][index[1]]]);\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdoChangeDOWN = true;\n\t\t\t\t}\n\t\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8){\n\t\t\t\t\tcontrol = control + 1\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tboolcontrol = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(doChangeDOWN){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\t//check all down pieces\n\t\t\tcontrol = 1;\n\t\t\tboolcontrol = (index[0]+control>0 && index[0]+control<8) ? true : false;\n\t\t\ttoChange = [];\n\t\t\tlet doChangeLeft = false;\n\t\t\twhile(boolcontrol && board[index[0]-control][index[1]]!=0 && board[index[0]-control][index[1]]!=2){\n\t\t\t\tif(board[index[0]-control][index[1]]!=board[index[0]][index[1]]){\n\t\t\t\t\ttoChange.push([index[0]-control,index[1],board[index[0]][index[1]]]);\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdoChangeLeft = true;\n\t\t\t\t}\n\t\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8){\n\t\t\t\t\tcontrol = control + 1\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tboolcontrol = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(doChangeDOWN){\n\t\t\t\ttoChange.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\n\n\t\t\tif(doChange){\n\t\t\t\tboard[index[0]][index[1]] = (state.turn) ? 1 : -1;\t\t\t\t\t//change color and all rows of the same color\n\t\t\t\t//change turn and count pieces in the table\n\t\t\t\tstate.turn = !state.turn;\n\t\t\t\t//allow following cells to be used so turn their value to 2s\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]] = (board[index[0]+1][index[1]]==0 && board[index[0]+1][index[1]]!=1 && board[index[0]+1][index[1]]!=-1) ? 2 : board[index[0]+1][index[1]];\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]] = (board[index[0]-1][index[1]]==0 && board[index[0]-1][index[1]]!=1 && board[index[0]-1][index[1]]!=-1) ? 2 : board[index[0]-1][index[1]];\t\n\t\t\t\t}\n\t\t\t\tif(index[1]+1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]][index[1]+1] = (board[index[0]][index[1]+1]==0 && board[index[0]][index[1]+1]!=1 && board[index[0]][index[1]+1]!=-1) ? 2 : board[index[0]][index[1]+1];\t\n\t\t\t\t}\n\t\t\t\tif(index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]][index[1]-1] = (board[index[0]][index[1]-1]==0 && board[index[0]][index[1]-1]!=1 && board[index[0]][index[1]-1]!=-1) ? 2 : board[index[0]][index[1]-1];\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\talert(\"INVALID MOVE\")\n\t\t\t}\n\t\t\tlet whites = 0;\n\t\t\tlet blacks = 0;\n\t\t\tlet end_of_game = 0;\n\t\t\tboard.map((row,irow) => {\n\t\t\t\trow.map((column,icolumn) => {\n\t\t\t\t\tif(column==1){\n\t\t\t\t\t\twhites = whites + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(column==-1){\n\t\t\t\t\t\tblacks = blacks + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(column==2){\n\t\t\t\t\t\tend_of_game = end_of_game + 1;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tlet message = '';\n\t\t\tif(end_of_game==0){\n\t\t\t\tif(whites!=blacks){                                                                     //DRAWS\n\t\t\t\t\tmessage = (whites>blacks) ? 'WHTE HAS WON' : 'BLACK HAS WON'\t\t\t\t\t\t//Message for show winner\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmessage = \"IT'S A DRAW\"\n\t\t\t\t}\n\t\t\t\tstate = {\n\t\t\t\t\tturn: true,\n\t\t\t\t\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t\t\t\t\t[0,0,2,1,-1,2,0,0],\n\t\t\t\t\t\t\t[0,0,2,-1,1,2,0,0],\n\t\t\t\t\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0]\n\t\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\talert(message)//alert who won the game\n\t\t\t}\n\t\t\troot.innerHTML = '';\n        \trender(root, state);//Restart the game\n\t\t}\n\t};\n\tcell.appendChild(piece)\n\treturn cell\n}\n\nconst render = (root, state) =>{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Design of the page\n\tconst header = document.createElement('div');\n\theader.style.backgroundColor='black';\n\theader.style.minWidth = '330px';\n\theader.style.height = '175px';\n\theader.style.display = 'flex';\n\theader.style.flexDirection = 'column'\n\theader.style.justifyContent = 'center';\n\theader.style.alignItems = 'center';\n\theader.style.overflow = 'auto';\n\n\tconst header_tittle = document.createElement('h1');\n\tconst tittle_textNode = document.createTextNode('OTHELLO')\n\theader_tittle.appendChild(tittle_textNode)\n\theader_tittle.style.backgroundColor = 'black'\n\theader_tittle.style.color = 'white'\n\theader_tittle.style.fontSize = '45px';\n\theader.appendChild(header_tittle)\n\n\tconst author = document.createElement('h1');\n\tconst author_textNode = document.createTextNode('Made by: SUULCODER')\n\tauthor.appendChild(author_textNode)\n\tauthor.style.backgroundColor = 'black'\n\tauthor.style.color = 'white'\n\tauthor.style.fontSize = '10px';\n\tauthor.style.marginBottom = '15px';\n\theader.appendChild(author)\n\n\tconst body = document.createElement('div');\n\tbody.style.backgroundColor = 'black'\n\tbody.style.minWidth = '330px';\n\tbody.style.height = '1000px'\n\tbody.style.display = 'flex';\n\tbody.style.justifyContent = 'center';\n\tbody.style.marginTop = '2px';\n\n\tconst board = document.createElement('div');\n\tboard.style.backgroundColor = 'green'\n\tboard.style.width = '295px';\n\tboard.style.height = '312px';\n\tboard.style.marginTop = '91px';\n\tboard.style.overflow = 'auto'\n\t\n\tstate.board.map((row, irow) =>\n\t\trow.map((column,icolumn) => renderCell({\n\t\t\tvalue: column,\n\t\t\tindex: [irow,icolumn],\n\t\t\tstate: state\n\t\t}))).map(my_row =>{\t\n\t\t\tconst curr_row = document.createElement('div')\n\t\t\tcurr_row.style.display = 'flex'\n\t\t\tmy_row.forEach(\n\t\t\t\tcell => curr_row.appendChild(cell),\n\t\t\t)\n\t\t\tboard.appendChild(curr_row)\n\t});\n\n\tbody.appendChild(board);\n\troot.appendChild(header);\n\troot.appendChild(body);\n};\n\n\nconst state = {\t\t\t\t\t\t\t\t//State of the game. \n\tturn: true,\n\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t[0,0,2,1,-1,2,0,0],\n\t\t\t[0,0,2,-1,1,2,0,0],\n\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0]\n\t\t]\n};\nrender(root,state);\n"]},"metadata":{},"sourceType":"module"}
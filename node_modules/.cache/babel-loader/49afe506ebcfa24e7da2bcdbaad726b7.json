{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nconst root = document.getElementById('root');\n\nconst renderCell = ({\n  value,\n  index,\n  turn\n}) => {\n  const cell = document.createElement('div');\n  cell.style.backgroundColor = 'white';\n  cell.style.width = '15px';\n  cell.style.height = '15px';\n  return renderCell;\n};\n\nconst render = (root, state) => {\n  const board = document.createElement('div');\n  board.style.backgroundColor = 'green';\n  board.style.width = '100%';\n  board.style.padding = '10px';\n  state.board.map((row, irow) => row.map((column, icolumn) => renderCell({\n    value: column,\n    index: [irow, icolumn],\n    turn: state.turn\n  }))).map(my_row => {\n    const curr_row = document.createElement('div');\n    curr_row.style.display = 'flex';\n    my_row.forEach(cell => curr_row.appendChild(cell));\n    board.appendChild(curr_row);\n  });\n  root.appendChild(board);\n};\n\nconst state = {\n  turn: true,\n  board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, -1, 0, 0, 0], [0, 0, 0, -1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n};\nrender(root, state);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÃ‘O WEB/OTHELLO/src/index.js"],"names":["React","ReactDOM","root","document","getElementById","renderCell","value","index","turn","cell","createElement","style","backgroundColor","width","height","render","state","board","padding","map","row","irow","column","icolumn","my_row","curr_row","display","forEach","appendChild"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,MAAMC,UAAU,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,KAFmB;AAGnBC,EAAAA;AAHmB,CAAD,KAIb;AACL,QAAMC,IAAI,GAAGN,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAb;AACAD,EAAAA,IAAI,CAACE,KAAL,CAAWC,eAAX,GAA6B,OAA7B;AACAH,EAAAA,IAAI,CAACE,KAAL,CAAWE,KAAX,GAAiB,MAAjB;AACAJ,EAAAA,IAAI,CAACE,KAAL,CAAWG,MAAX,GAAoB,MAApB;AACA,SAAOT,UAAP;AAEA,CAXD;;AAaA,MAAMU,MAAM,GAAG,CAACb,IAAD,EAAOc,KAAP,KAAgB;AAC9B,QAAMC,KAAK,GAAGd,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAd;AACAO,EAAAA,KAAK,CAACN,KAAN,CAAYC,eAAZ,GAA8B,OAA9B;AACAK,EAAAA,KAAK,CAACN,KAAN,CAAYE,KAAZ,GAAoB,MAApB;AACAI,EAAAA,KAAK,CAACN,KAAN,CAAYO,OAAZ,GAAsB,MAAtB;AAEAF,EAAAA,KAAK,CAACC,KAAN,CAAYE,GAAZ,CAAgB,CAACC,GAAD,EAAMC,IAAN,KACfD,GAAG,CAACD,GAAJ,CAAQ,CAACG,MAAD,EAAQC,OAAR,KAAoBlB,UAAU,CAAC;AACtCC,IAAAA,KAAK,EAAEgB,MAD+B;AAEtCf,IAAAA,KAAK,EAAE,CAACc,IAAD,EAAME,OAAN,CAF+B;AAGtCf,IAAAA,IAAI,EAAEQ,KAAK,CAACR;AAH0B,GAAD,CAAtC,CADD,EAKMW,GALN,CAKUK,MAAM,IAAG;AACjB,UAAMC,QAAQ,GAAGtB,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAjB;AACAe,IAAAA,QAAQ,CAACd,KAAT,CAAee,OAAf,GAAyB,MAAzB;AACAF,IAAAA,MAAM,CAACG,OAAP,CACClB,IAAI,IAAIgB,QAAQ,CAACG,WAAT,CAAqBnB,IAArB,CADT;AAGAQ,IAAAA,KAAK,CAACW,WAAN,CAAkBH,QAAlB;AACD,GAZD;AAaAvB,EAAAA,IAAI,CAAC0B,WAAL,CAAiBX,KAAjB;AACA,CApBD;;AAuBA,MAAMD,KAAK,GAAG;AACbR,EAAAA,IAAI,EAAE,IADO;AAEbS,EAAAA,KAAK,EAAE,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAD,EACL,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CADK,EAEL,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAFK,EAGL,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAC,CAAV,EAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,CAHK,EAIL,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAC,CAAR,EAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,CAJK,EAKL,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CALK,EAML,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CANK,EAOL,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAPK;AAFM,CAAd;AAaAF,MAAM,CAACb,IAAD,EAAMc,KAAN,CAAN","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nconst root = document.getElementById('root');\n\nconst renderCell = ({\n\tvalue,\n\tindex,\n\tturn\n}) => {\n\tconst cell = document.createElement('div')\n\tcell.style.backgroundColor = 'white'\n\tcell.style.width='15px'\n\tcell.style.height = '15px'\n\treturn renderCell\n\n}\n\nconst render = (root, state) =>{\n\tconst board = document.createElement('div');\n\tboard.style.backgroundColor = 'green'\n\tboard.style.width = '100%';\n\tboard.style.padding = '10px';\n\t\n\tstate.board.map((row, irow) =>\n\t\trow.map((column,icolumn) => renderCell({\n\t\t\tvalue: column,\n\t\t\tindex: [irow,icolumn],\n\t\t\tturn: state.turn\n\t\t}))).map(my_row =>{\t\n\t\t\tconst curr_row = document.createElement('div')\n\t\t\tcurr_row.style.display = 'flex'\n\t\t\tmy_row.forEach(\n\t\t\t\tcell => curr_row.appendChild(cell),\n\t\t\t)\n\t\t\tboard.appendChild(curr_row)\n\t});\n\troot.appendChild(board);\n};\n\n\nconst state = {\n\tturn: true,\n\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,1,-1,0,0,0],\n\t\t\t[0,0,0,-1,1,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0]\n\t\t]\n};\n\nrender(root,state);\n"]},"metadata":{},"sourceType":"module"}
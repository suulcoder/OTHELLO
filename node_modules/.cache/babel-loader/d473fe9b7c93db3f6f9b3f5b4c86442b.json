{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nconst root = document.getElementById('root');\n\nconst renderCell = ({\n  value,\n  index,\n  turn\n}) => {\n  const cell = document.createElement('div');\n  cell.style.backgroundColor = '#218032';\n  cell.marginTop = '1px';\n  cell.marginBottom = '1px';\n  cell.marginRight = '1px';\n  cell.marginLeft = '1px';\n  cell.style.width = '50px';\n  cell.style.height = '50px';\n  return cell;\n};\n\nconst render = (root, state) => {\n  const body = document.createElement('div');\n  body.style.backgroundColor = 'black';\n  body.style.width = '100%';\n  body.style.display = 'flex';\n  body.style.alighItems = 'center';\n  body.style.justify = 'center';\n  body.style.padding = '10px 10px 10px 10px';\n  const board = document.createElement('div');\n  board.style.backgroundColor = 'green';\n  board.style.width = '100%';\n  board.style.marginTop = '5px';\n  board.style.marginBottom = '5px';\n  board.style.marginLeft = '5px';\n  board.style.marginRight = '15px';\n  state.board.map((row, irow) => row.map((column, icolumn) => renderCell({\n    value: column,\n    index: [irow, icolumn],\n    turn: state.turn\n  }))).map(my_row => {\n    const curr_row = document.createElement('div');\n    curr_row.style.display = 'flex';\n    my_row.forEach(cell => curr_row.appendChild(cell));\n    board.appendChild(curr_row);\n  });\n  body.appendChild(board);\n  root.appendChild(body);\n};\n\nconst state = {\n  turn: true,\n  board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, -1, 0, 0, 0], [0, 0, 0, -1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n};\nrender(root, state);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÃ‘O WEB/OTHELLO/src/index.js"],"names":["React","ReactDOM","root","document","getElementById","renderCell","value","index","turn","cell","createElement","style","backgroundColor","marginTop","marginBottom","marginRight","marginLeft","width","height","render","state","body","display","alighItems","justify","padding","board","map","row","irow","column","icolumn","my_row","curr_row","forEach","appendChild"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nconst root = document.getElementById('root');\n\nconst renderCell = ({\n\tvalue,\n\tindex,\n\tturn\n}) => {\n\tconst cell = document.createElement('div')\n\tcell.style.backgroundColor = '#218032'\n\tcell.marginTop = '1px'\n\tcell.marginBottom = '1px'\n\tcell.marginRight = '1px'\n\tcell.marginLeft = '1px'\n\tcell.style.width='50px'\n\tcell.style.height = '50px'\n\treturn cell\n\n}\n\nconst render = (root, state) =>{\n\tconst body = document.createElement('div');\n\tbody.style.backgroundColor = 'black'\n\tbody.style.width = '100%';\n\tbody.style.display = 'flex';\n\tbody.style.alighItems = 'center';\n\tbody.style.justify = 'center';\n\tbody.style.padding = '10px 10px 10px 10px';\n\tconst board = document.createElement('div');\n\tboard.style.backgroundColor = 'green'\n\tboard.style.width = '100%';\n\tboard.style.marginTop = '5px';\n\tboard.style.marginBottom = '5px';\n\tboard.style.marginLeft = '5px';\n\tboard.style.marginRight = '15px';\n\t\n\tstate.board.map((row, irow) =>\n\t\trow.map((column,icolumn) => renderCell({\n\t\t\tvalue: column,\n\t\t\tindex: [irow,icolumn],\n\t\t\tturn: state.turn\n\t\t}))).map(my_row =>{\t\n\t\t\tconst curr_row = document.createElement('div')\n\t\t\tcurr_row.style.display = 'flex'\n\t\t\tmy_row.forEach(\n\t\t\t\tcell => curr_row.appendChild(cell),\n\t\t\t)\n\t\t\tboard.appendChild(curr_row)\n\t});\n\tbody.appendChild(board);\n\troot.appendChild(body);\n};\n\n\nconst state = {\n\tturn: true,\n\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,1,-1,0,0,0],\n\t\t\t[0,0,0,-1,1,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0]\n\t\t]\n};\n\nrender(root,state);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n\tUNIVERSIDAD DEL VALLE DE GUATEMALA\n\tOTHELLO\n\tDiseño WEB\n\tSAÚL CONTRERAS (SUULCODER)\n\n*/\nconst root = document.getElementById('root'); //root element from html\n\nconst renderCell = ({\n  //design for each cell\n  value,\n  index,\n  state\n}) => {\n  const _state = state,\n        board = _state.board;\n  const cell = document.createElement('div');\n  cell.style.backgroundColor = '#218032';\n  cell.style.borderColor = 'blac';\n  cell.style.display = 'block';\n  cell.style.borderStyle = 'solid';\n  cell.marginTop = '2px';\n  cell.marginBottom = '2px';\n  cell.marginRight = '2px';\n  cell.marginLeft = '2px';\n  cell.style.width = '100%';\n  cell.style.height = '33px';\n  const piece = document.createElement('button');\n  piece.style.borderRadius = '100px';\n  piece.style.width = '100%';\n  piece.style.height = '100%';\n  const myTurn = state.turn ? 1 : -1; //check all up pieces\n\n  let control = 1;\n  let boolcontrol = index[0] + control > 0 && index[0] + control < 8 ? true : false;\n  const toChangeUp = [];\n  let doChangeUP = false;\n\n  while (boolcontrol && board[index[0] + control][index[1]] != 0 && board[index[0] + control][index[1]] != 2) {\n    if (board[index[0] + control][index[1]] != myTurn) {\n      toChangeUp.push([index[0] + control, index[1], board[index[0]][index[1]]]);\n    } else {\n      doChangeUP = toChangeUp.length != 0 ? true : false;\n      boolcontrol = false;\n    }\n\n    if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all down pieces\n\n\n  let doChangeDOWN = false;\n  let doChangeDownRight = false;\n  let doChangeDownLeft = false;\n  const toChangeDown = [];\n  const toChangeDownLeft = [];\n  const toChangeDownRight = [];\n\n  try {\n    control = 1;\n    boolcontrol = index[0] - control > 0 && index[0] - control < 8 ? true : false;\n\n    while (boolcontrol && board[index[0] - control][index[1]] != 0 && board[index[0] - control][index[1]] != 2) {\n      if (board[index[0] - control][index[1]] != myTurn) {\n        toChangeDown.push([index[0] - control, index[1], board[index[0]][index[1]]]);\n      } else {\n        doChangeDOWN = toChangeDown.length != 0 ? true : false;\n        ;\n        boolcontrol = false;\n      }\n\n      if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8) {\n        control = control + 1;\n      } else {\n        boolcontrol = false;\n      }\n    } //check all down and left pieces\n\n\n    control = 1;\n    boolcontrol = index[0] - control > 0 && index[0] - control < 8 && index[1] - control > 0 && index[1] - control < 8 ? true : false;\n\n    while (boolcontrol && board[index[0] - control][index[1] - control] != 0 && board[index[0] - control][index[1] - control] != 2) {\n      if (board[index[0] - control][index[1] - control] != myTurn) {\n        toChangeDownLeft.push([index[0] - control, index[1] - control, board[index[0]][index[1]]]);\n      } else {\n        doChangeDownLeft = toChangeDownLeft.length != 0 ? true : false;\n        ;\n        boolcontrol = false;\n      }\n\n      if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8 && index[1] - control > 0 && index[1] - control < 8) {\n        control = control + 1;\n      } else {\n        boolcontrol = false;\n      }\n    } //check all down and right pieces\n\n\n    control = 1;\n    boolcontrol = index[0] - control > 0 && index[0] - control < 8 && index[1] + control > 0 && index[1] + control < 8 ? true : false;\n\n    while (boolcontrol && board[index[0] - control][index[1] + control] != 0 && board[index[0] - control][index[1] + control] != 2) {\n      if (board[index[0] - control][index[1] + control] != myTurn) {\n        toChangeDownRight.push([index[0] - control, index[1] + control, board[index[0]][index[1]]]);\n      } else {\n        doChangeDownRight = toChangeDownRight.length != 0 ? true : false;\n        ;\n        boolcontrol = false;\n      }\n\n      if (index[0] - control + 1 >= 0 && index[0] - control + 1 < 8 && index[1] + control > 0 && index[1] + control < 8) {\n        control = control + 1;\n      } else {\n        boolcontrol = false;\n      }\n    }\n  } catch {\n    console.log('done');\n  } //check all left pieces\n\n\n  control = 1;\n  boolcontrol = index[1] - control > 0 && index[1] - control < 8 ? true : false;\n  const toChangeLeft = [];\n  let doChangeLeft = false;\n\n  while (boolcontrol && board[index[0]][index[1] - control] != 0 && board[index[0]][index[1] - control] != 2) {\n    if (board[index[0]][index[1] - control] != myTurn) {\n      toChangeLeft.push([index[0], index[1] - control, board[index[0]][index[1]]]);\n    } else {\n      doChangeLeft = toChangeLeft.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[1] - control + 1 >= 0 && index[1] - control + 1 < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all right pieces\n\n\n  control = 1;\n  boolcontrol = index[1] + control > 0 && index[1] + control < 8 ? true : false;\n  const toChangeRight = [];\n  let doChangeRight = false;\n\n  while (boolcontrol && board[index[0]][index[1] + control] != 0 && board[index[0]][index[1] + control] != 2) {\n    if (board[index[0]][index[1] + control] != myTurn) {\n      toChangeRight.push([index[0], index[1] + control, board[index[0]][index[1]]]);\n    } else {\n      doChangeRight = toChangeRight.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[1] + control + 1 >= 0 && index[1] + control + 1 < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all up and right pieces\n\n\n  control = 1;\n  boolcontrol = index[0] + control > 0 && index[0] + control < 8 && index[1] + control > 0 && index[1] + control < 8 ? true : false;\n  toChangeUpRight = [];\n  let doChangeUpRight = false;\n\n  while (boolcontrol && board[index[0] + control][index[1] + control] != 0 && board[index[0] + control][index[1] + control] != 2) {\n    if (board[index[0] + control][index[1] + control] != myTurn) {\n      toChangeUpRight.push([index[0] + control, index[1] + control, board[index[0]][index[1]]]);\n    } else {\n      doChangeUpRight = toChangeUpRight.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8 && index[1] + control > 0 && index[1] + control < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  } //check all up and left pieces\n\n\n  control = 1;\n  boolcontrol = index[0] + control > 0 && index[0] + control < 8 && index[1] - control > 0 && index[1] - control < 8 ? true : false;\n  const toChangeUpLeft = [];\n  let doChangeUpLeft = false;\n\n  while (boolcontrol && board[index[0] + control][index[1] - control] != 0 && board[index[0] + control][index[1] - control] != 2) {\n    if (board[index[0] + control][index[1] - control] != myTurn) {\n      toChangeUpLeft.push([index[0] + control, index[1] - control, board[index[0]][index[1]]]);\n    } else {\n      doChangeUpLeft = toChange.length != 0 ? true : false;\n      ;\n      boolcontrol = false;\n    }\n\n    if (index[0] + control + 1 >= 0 && index[0] + control + 1 < 8 && index[1] - control > 0 && index[1] - control < 8) {\n      control = control + 1;\n    } else {\n      boolcontrol = false;\n    }\n  }\n\n  const doChange = doChangeRight || doChangeLeft || doChangeDOWN || doChangeUP || doChangeUpLeft || doChangeUpRight || doChangeDownRight || doChangeDownLeft;\n\n  if (value === 0 || value === 2) {\n    piece.style.backgroundColor = '#218032';\n  } else if (value === 1) {\n    piece.style.backgroundColor = 'white';\n  } else if (value === -1) {\n    piece.style.backgroundColor = 'black';\n  }\n\n  if (doChange) {\n    piece.style.borderColor = 'black';\n  }\n\n  piece.onclick = () => {\n    //logic of the game\n    if (value === 2) {\n      board[index[0]][index[1]] = state.turn ? 1 : -1; //change color and all rows of the same color\n\n      if (doChangeUP) {\n        toChangeUp.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeDOWN) {\n        toChangeDown.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeLeft) {\n        toChangeLeft.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeRight) {\n        toChangeRight.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeDownLeft) {\n        toChangeLeft.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeDownRight) {\n        toChangeDownRight.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeUpRight) {\n        toChangeUpRight.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChangeUpLeft) {\n        toChangeUpLeft.map(myList => board[myList[0]][myList[1]] = myList[2]);\n      }\n\n      if (doChange) {\n        board[index[0]][index[1]] = state.turn ? 1 : -1; //change color and all rows of the same color\n        //change turn and count pieces in the table\n\n        state.turn = !state.turn; //allow following cells to be used so turn their value to 2s\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8) {\n          board[index[0] + 1][index[1]] = board[index[0] + 1][index[1]] == 0 && board[index[0] + 1][index[1]] != 1 && board[index[0] + 1][index[1]] != -1 ? 2 : board[index[0] + 1][index[1]];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8) {\n          board[index[0] - 1][index[1]] = board[index[0] - 1][index[1]] == 0 && board[index[0] - 1][index[1]] != 1 && board[index[0] - 1][index[1]] != -1 ? 2 : board[index[0] - 1][index[1]];\n        }\n\n        if (index[1] + 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0]][index[1] + 1] = board[index[0]][index[1] + 1] == 0 && board[index[0]][index[1] + 1] != 1 && board[index[0]][index[1] + 1] != -1 ? 2 : board[index[0]][index[1] + 1];\n        }\n\n        if (index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0]][index[1] - 1] = board[index[0]][index[1] - 1] == 0 && board[index[0]][index[1] - 1] != 1 && board[index[0]][index[1] - 1] != -1 ? 2 : board[index[0]][index[1] - 1];\n        }\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8 && index[1] + 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0] + 1][index[1] + 1] = board[index[0] + 1][index[1] + 1] == 0 && board[index[0] + 1][index[1] + 1] != 1 && board[index[0] + 1][index[1] + 1] != -1 ? 2 : board[index[0] + 1][index[1] + 1];\n        }\n\n        if (index[0] + 1 >= 0 && index[0] + 1 < 8 && index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0] + 1][index[1] - 1] = board[index[0] + 1][index[1] - 1] == 0 && board[index[0] + 1][index[1] - 1] != 1 && board[index[0] + 1][index[1] - 1] != -1 ? 2 : board[index[0] + 1][index[1] - 1];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8 && index[1] - 1 >= 0 && index[1] - 1 < 8) {\n          board[index[0] - 1][index[1] - 1] = board[index[0] - 1][index[1] - 1] == 0 && board[index[0] - 1][index[1] - 1] != 1 && board[index[0] - 1][index[1] - 1] != -1 ? 2 : board[index[0] - 1][index[1] - 1];\n        }\n\n        if (index[0] - 1 >= 0 && index[0] - 1 < 8 && index[1] - 1 >= 0 && index[1] + 1 < 8) {\n          board[index[0] - 1][index[1] + 1] = board[index[0] - 1][index[1] + 1] == 0 && board[index[0] - 1][index[1] + 1] != 1 && board[index[0] - 1][index[1] + 1] != -1 ? 2 : board[index[0] - 1][index[1] + 1];\n        }\n      } else {\n        board[index[0]][index[1]] = 2;\n        alert(\"INVALID MOVE\");\n      }\n\n      let whites = 0;\n      let blacks = 0;\n      let end_of_game = 0;\n      board.map((row, irow) => {\n        row.map((column, icolumn) => {\n          if (column == 1) {\n            whites = whites + 1;\n          } else if (column == -1) {\n            blacks = blacks + 1;\n          } else if (column == 2) {\n            end_of_game = end_of_game + 1;\n          }\n        });\n      });\n      let message = '';\n\n      if (end_of_game == 0) {\n        if (whites != blacks) {\n          //DRAWS\n          message = whites > blacks ? 'WHTE HAS WON' : 'BLACK HAS WON'; //Message for show winner\t\n        } else {\n          message = \"IT'S A DRAW\";\n        }\n\n        state = {\n          turn: true,\n          board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 1, -1, 2, 0, 0], [0, 0, 2, -1, 1, 2, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n        };\n        alert(message); //alert who won the game\n      }\n\n      root.innerHTML = '';\n      render(root, state); //Restart the game\n    } else {\n      alert(\"INVALID MOVE\");\n    }\n  };\n\n  cell.appendChild(piece);\n  return cell;\n};\n\nconst render = (root, state) => {\n  //Design of the page\n  const header = document.createElement('div');\n  header.style.backgroundColor = 'black';\n  header.style.minWidth = '330px';\n  header.style.height = '175px';\n  header.style.display = 'flex';\n  header.style.flexDirection = 'column';\n  header.style.justifyContent = 'center';\n  header.style.alignItems = 'center';\n  header.style.overflow = 'auto';\n  const header_tittle = document.createElement('h1');\n  const tittle_textNode = document.createTextNode('OTHELLO');\n  header_tittle.appendChild(tittle_textNode);\n  header_tittle.style.backgroundColor = 'black';\n  header_tittle.style.color = 'white';\n  header_tittle.style.fontSize = '45px';\n  header.appendChild(header_tittle);\n  const author = document.createElement('h1');\n  const author_textNode = document.createTextNode('Made by: SUULCODER');\n  author.appendChild(author_textNode);\n  author.style.backgroundColor = 'black';\n  author.style.color = 'white';\n  author.style.fontSize = '10px';\n  author.style.marginBottom = '15px';\n  header.appendChild(author);\n  const body = document.createElement('div');\n  body.style.backgroundColor = 'black';\n  body.style.minWidth = '330px';\n  body.style.height = '1000px';\n  body.style.display = 'flex';\n  header.style.flexDirection = 'column';\n  body.style.justifyContent = 'center';\n  const board = document.createElement('div');\n  board.style.backgroundColor = 'green';\n  board.style.width = '295px';\n  board.style.height = '312px';\n  board.style.marginTop = '91px';\n  board.style.overflow = 'auto';\n  const currentState = document.createElement('div');\n  const curr_h1 = document.createElement('h1');\n  const curr_circle = document.createElement('div');\n  const turn = state.turn ? 'white' : 'black';\n  const currentState_textNode = document.createTextNode('turn: ' + turn);\n  currentState.style.display = 'flex';\n  currentState.style.minWidth = '330px';\n  curr_h1.appendChild(currentState_textNode);\n  currentState.style.backgroundColor = '#218032';\n  currentState.style.justifyContent = 'center';\n  currentState.style.color = 'white';\n  curr_h1.style.fontSize = '20px';\n  curr_circle.style.backgroundColor = turn;\n  curr_circle.style.borderRadius = '100px';\n  curr_circle.style.height = '15px';\n  curr_circle.style.width = '15px';\n  curr_circle.style.padding = '7px';\n  curr_circle.style.marginLeft = '10px';\n  curr_circle.style.marginTop = '10px';\n  currentState.appendChild(curr_h1);\n  currentState.appendChild(curr_circle);\n  let whites = 0;\n  let blacks = 0;\n  state.board.map((row, irow) => {\n    row.map((column, icolumn) => {\n      if (column == 1) {\n        whites = whites + 1;\n      } else if (column == -1) {\n        blacks = blacks + 1;\n      }\n    });\n  });\n  const currentwinner = document.createElement('div');\n  const curr_whites = document.createElement('h1');\n  const curr_blacks = document.createElement('h1');\n  const white_circle = document.createElement('div');\n  const black_circle = document.createElement('div');\n  const white_textNode = document.createTextNode(whites);\n  const black_textNode = document.createTextNode(blacks);\n  currentwinner.style.display = 'flex';\n  currentwinner.style.marginTop = '2px';\n  currentwinner.style.minWidth = '330px';\n  curr_whites.appendChild(white_textNode);\n  curr_blacks.appendChild(black_textNode);\n  currentwinner.style.backgroundColor = '#218032';\n  currentwinner.style.justifyContent = 'center';\n  currentwinner.style.color = 'white';\n  curr_whites.style.fontSize = '12px';\n  curr_blacks.style.fontSize = '12px';\n  white_circle.style.backgroundColor = 'white';\n  black_circle.style.backgroundColor = 'black';\n  white_circle.style.borderRadius = '100px';\n  black_circle.style.borderRadius = '100px';\n  white_circle.style.height = '5px';\n  white_circle.style.width = '5px';\n  white_circle.style.padding = '7px';\n  white_circle.style.marginLeft = '10px';\n  white_circle.style.marginRight = '10px';\n  white_circle.style.marginTop = '7px';\n  black_circle.style.height = '5px';\n  black_circle.style.width = '5px';\n  black_circle.style.padding = '7px';\n  black_circle.style.marginLeft = '10px';\n  black_circle.style.marginRight = '10px';\n  black_circle.style.marginTop = '7px';\n  currentwinner.appendChild(white_circle);\n  currentwinner.appendChild(curr_whites);\n  currentwinner.appendChild(black_circle);\n  currentwinner.appendChild(curr_blacks);\n  state.board.map((row, irow) => row.map((column, icolumn) => renderCell({\n    value: column,\n    index: [irow, icolumn],\n    state: state\n  }))).map(my_row => {\n    const curr_row = document.createElement('div');\n    curr_row.style.display = 'flex';\n    my_row.forEach(cell => curr_row.appendChild(cell));\n    board.appendChild(curr_row);\n  });\n  body.appendChild(board);\n  root.appendChild(header);\n  root.appendChild(currentState);\n  root.appendChild(currentwinner);\n  root.appendChild(body);\n};\n\nconst state = {\n  //State of the game. \n  turn: true,\n  board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 1, -1, 2, 0, 0], [0, 0, 2, -1, 1, 2, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n};\nrender(root, state);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÑO WEB/OTHELLO/src/index.js"],"names":["root","document","getElementById","renderCell","value","index","state","board","cell","createElement","style","backgroundColor","borderColor","display","borderStyle","marginTop","marginBottom","marginRight","marginLeft","width","height","piece","borderRadius","myTurn","turn","control","boolcontrol","toChangeUp","doChangeUP","push","length","doChangeDOWN","doChangeDownRight","doChangeDownLeft","toChangeDown","toChangeDownLeft","toChangeDownRight","console","log","toChangeLeft","doChangeLeft","toChangeRight","doChangeRight","toChangeUpRight","doChangeUpRight","toChangeUpLeft","doChangeUpLeft","toChange","doChange","onclick","map","myList","alert","whites","blacks","end_of_game","row","irow","column","icolumn","message","innerHTML","render","appendChild","header","minWidth","flexDirection","justifyContent","alignItems","overflow","header_tittle","tittle_textNode","createTextNode","color","fontSize","author","author_textNode","body","currentState","curr_h1","curr_circle","currentState_textNode","padding","currentwinner","curr_whites","curr_blacks","white_circle","black_circle","white_textNode","black_textNode","my_row","curr_row","forEach"],"mappings":"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","sourcesContent":["/*\n\tUNIVERSIDAD DEL VALLE DE GUATEMALA\n\tOTHELLO\n\tDiseño WEB\n\tSAÚL CONTRERAS (SUULCODER)\n\n*/\nconst root = document.getElementById('root');\t\t\t\t\t\t\t\t\t//root element from html\n\nconst renderCell = ({\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//design for each cell\n\tvalue,\n\tindex,\n\tstate\n}) => {\n\tconst { board } = state;\n\tconst cell = document.createElement('div')\n\tcell.style.backgroundColor = '#218032'\n\tcell.style.borderColor = 'blac'\n\tcell.style.display = 'block'\n\tcell.style.borderStyle = 'solid'\n\tcell.marginTop = '2px'\n\tcell.marginBottom = '2px'\n\tcell.marginRight = '2px'\n\tcell.marginLeft = '2px'\n\tcell.style.width='100%'\n\tcell.style.height='33px'\n\tconst piece = document.createElement('button')\n\tpiece.style.borderRadius = '100px'\n\tpiece.style.width = '100%'\n\tpiece.style.height = '100%'\n\tconst myTurn = (state.turn) ? 1 : -1;\t\n\t//check all up pieces\n\tlet control = 1;\n\tlet boolcontrol = (index[0]+control>0 && index[0]+control<8) ? true : false;\n\tconst toChangeUp = [];\n\tlet doChangeUP = false;\n\n\twhile(boolcontrol && board[index[0]+control][index[1]]!=0 && board[index[0]+control][index[1]]!=2){\n\t\tif(board[index[0]+control][index[1]]!=myTurn){\n\t\t\ttoChangeUp.push([index[0]+control,index[1],board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeUP = (toChangeUp.length!=0) ? true : false;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[0]+control+1>=0 && index[0]+control+1<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\n\t//check all down pieces\n\tlet doChangeDOWN = false;\n\tlet doChangeDownRight = false;\n\tlet doChangeDownLeft = false;\n\tconst toChangeDown = [];\n\tconst toChangeDownLeft = [];\n\tconst toChangeDownRight = [];\n\n\ttry{\n\t\tcontrol = 1;\n\t\tboolcontrol = (index[0]-control>0 && index[0]-control<8) ? true : false;\n\t\twhile(boolcontrol && board[index[0]-control][index[1]]!=0 && board[index[0]-control][index[1]]!=2){\n\t\t\tif(board[index[0]-control][index[1]]!=myTurn){\n\t\t\t\ttoChangeDown.push([index[0]-control,index[1],board[index[0]][index[1]]]);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdoChangeDOWN = (toChangeDown.length!=0) ? true : false;;\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8){\n\t\t\t\tcontrol = control + 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t}\n\n\t\t//check all down and left pieces\n\t\tcontrol = 1;\n\t\tboolcontrol = (index[0]-control>0 && index[0]-control<8 && index[1]-control>0 && index[1]-control<8) ? true : false;\t\t\n\t\twhile(boolcontrol && board[index[0]-control][index[1]-control]!=0 && board[index[0]-control][index[1]-control]!=2){\n\t\t\tif(board[index[0]-control][index[1]-control]!=myTurn){\n\t\t\t\ttoChangeDownLeft.push([index[0]-control,index[1]-control,board[index[0]][index[1]]]);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdoChangeDownLeft = (toChangeDownLeft.length!=0) ? true : false;;\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8 && index[1]-control>0 && index[1]-control<8){\n\t\t\t\tcontrol = control + 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t}\n\t \t//check all down and right pieces\n\t \tcontrol = 1;\n\t\tboolcontrol = (index[0]-control>0 && index[0]-control<8 && index[1]+control>0 && index[1]+control<8) ? true : false;\n\t\twhile(boolcontrol && board[index[0]-control][index[1]+control]!=0 && board[index[0]-control][index[1]+control]!=2){\n\t\t\tif(board[index[0]-control][index[1]+control]!=myTurn){\n\t\t\t\ttoChangeDownRight.push([index[0]-control,index[1]+control,board[index[0]][index[1]]]);\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdoChangeDownRight = (toChangeDownRight.length!=0) ? true : false;;\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t\tif (index[0]-control+1>=0 && index[0]-control+1<8 && index[1]+control>0 && index[1]+control<8){\n\t\t\t\tcontrol = control + 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboolcontrol = false;\n\t\t\t}\n\t\t}\n\t}\n\tcatch{\n\t\tconsole.log('done')\n\t}\n\n\t//check all left pieces\n\tcontrol = 1;\n\tboolcontrol = (index[1]-control>0 && index[1]-control<8) ? true : false;\n\tconst toChangeLeft = [];\n\tlet doChangeLeft = false;\n\twhile(boolcontrol && board[index[0]][index[1]-control]!=0 && board[index[0]][index[1]-control]!=2){\n\t\tif(board[index[0]][index[1]-control]!=myTurn){\n\t\t\ttoChangeLeft.push([index[0],index[1]-control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeLeft = (toChangeLeft.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[1]-control+1>=0 && index[1]-control+1<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\t//check all right pieces\n\tcontrol = 1;\n\tboolcontrol = (index[1]+control>0 && index[1]+control<8) ? true : false;\n\tconst toChangeRight = [];\n\tlet doChangeRight = false;\n\twhile(boolcontrol && board[index[0]][index[1]+control]!=0 && board[index[0]][index[1]+control]!=2){\n\t\tif(board[index[0]][index[1]+control]!=myTurn){\n\t\t\ttoChangeRight.push([index[0],index[1]+control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeRight = (toChangeRight.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[1]+control+1>=0 && index[1]+control+1<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\n\t//check all up and right pieces\n\tcontrol = 1;\n\tboolcontrol = (index[0]+control>0 && index[0]+control<8 && index[1]+control>0 && index[1]+control<8) ? true : false;\n\ttoChangeUpRight = [];\n\tlet doChangeUpRight = false;\n\twhile(boolcontrol && board[index[0]+control][index[1]+control]!=0 && board[index[0]+control][index[1]+control]!=2){\n\t\tif(board[index[0]+control][index[1]+control]!=myTurn){\n\t\t\ttoChangeUpRight.push([index[0]+control,index[1]+control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeUpRight = (toChangeUpRight.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[0]+control+1>=0 && index[0]+control+1<8 && index[1]+control>0 && index[1]+control<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\t//check all up and left pieces\n\tcontrol = 1;\n\tboolcontrol = (index[0]+control>0 && index[0]+control<8 && index[1]-control>0 && index[1]-control<8) ? true : false;\n\tconst toChangeUpLeft = [];\n\tlet doChangeUpLeft = false;\n\twhile(boolcontrol && board[index[0]+control][index[1]-control]!=0 && board[index[0]+control][index[1]-control]!=2){\n\t\tif(board[index[0]+control][index[1]-control]!=myTurn){\n\t\t\ttoChangeUpLeft.push([index[0]+control,index[1]-control,board[index[0]][index[1]]]);\t\n\t\t}\n\t\telse{\n\t\t\tdoChangeUpLeft = (toChange.length!=0) ? true : false;;\n\t\t\tboolcontrol = false;\n\t\t}\n\t\tif (index[0]+control+1>=0 && index[0]+control+1<8 && index[1]-control>0 && index[1]-control<8){\n\t\t\tcontrol = control + 1\n\t\t}\n\t\telse{\n\t\t\tboolcontrol = false;\n\t\t}\n\t}\n\tconst doChange = doChangeRight || doChangeLeft || doChangeDOWN || doChangeUP || doChangeUpLeft || doChangeUpRight || doChangeDownRight || doChangeDownLeft;\n\n\n\tif(value===0 || value===2){\n\t\tpiece.style.backgroundColor = '#218032'\n\t}\n\telse if(value===1){\n\t\tpiece.style.backgroundColor = 'white'\n\t}\n\telse if(value===-1){\n\t\tpiece.style.backgroundColor = 'black'\n\t}\n\tif(doChange){\n\t\tpiece.style.borderColor = 'black'\t\n\t}\n\t\n\n\tpiece.onclick = () => {\t\t\t\t\t\t\t\t\t\t\t\t\t\t//logic of the game\n\t\tif(value===2){\n\t\t\tboard[index[0]][index[1]] = (state.turn) ? 1 : -1;\t\t\t\t\t//change color and all rows of the same color\n\t\t\tif(doChangeUP){\n\t\t\t\ttoChangeUp.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeDOWN){\n\t\t\t\ttoChangeDown.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\t\n\t\t\tif(doChangeLeft){\n\t\t\t\ttoChangeLeft.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeRight){\n\t\t\t\ttoChangeRight.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeDownLeft){\n\t\t\t\t\ttoChangeLeft.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t\t}\n\t\t\tif(doChangeDownRight){\n\t\t\t\ttoChangeDownRight.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\t\n\t\t\tif(doChangeUpRight){\n\t\t\t\ttoChangeUpRight.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChangeUpLeft){\n\t\t\t\ttoChangeUpLeft.map((myList)=> board[myList[0]][myList[1]] = myList[2])\n\t\t\t}\n\t\t\tif(doChange){\n\t\t\t\tboard[index[0]][index[1]] = (state.turn) ? 1 : -1;\t\t\t\t\t//change color and all rows of the same color\n\t\t\t\t//change turn and count pieces in the table\n\t\t\t\tstate.turn = !state.turn;\n\t\t\t\t//allow following cells to be used so turn their value to 2s\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]] = (board[index[0]+1][index[1]]==0 && board[index[0]+1][index[1]]!=1 && board[index[0]+1][index[1]]!=-1) ? 2 : board[index[0]+1][index[1]];\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]] = (board[index[0]-1][index[1]]==0 && board[index[0]-1][index[1]]!=1 && board[index[0]-1][index[1]]!=-1) ? 2 : board[index[0]-1][index[1]];\t\n\t\t\t\t}\n\t\t\t\tif(index[1]+1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]][index[1]+1] = (board[index[0]][index[1]+1]==0 && board[index[0]][index[1]+1]!=1 && board[index[0]][index[1]+1]!=-1) ? 2 : board[index[0]][index[1]+1];\t\n\t\t\t\t}\n\t\t\t\tif(index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]][index[1]-1] = (board[index[0]][index[1]-1]==0 && board[index[0]][index[1]-1]!=1 && board[index[0]][index[1]-1]!=-1) ? 2 : board[index[0]][index[1]-1];\t\n\t\t\t\t}\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8 && index[1]+1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]+1] = (board[index[0]+1][index[1]+1]==0 && board[index[0]+1][index[1]+1]!=1 && board[index[0]+1][index[1]+1]!=-1) ? 2 : board[index[0]+1][index[1]+1];\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(index[0]+1>=0 && index[0]+1<8 && index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]+1][index[1]-1] = (board[index[0]+1][index[1]-1]==0 && board[index[0]+1][index[1]-1]!=1 && board[index[0]+1][index[1]-1]!=-1) ? 2 : board[index[0]+1][index[1]-1];\n\t\t\t\t}\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8 && index[1]-1>=0 && index[1]-1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]-1] = (board[index[0]-1][index[1]-1]==0 && board[index[0]-1][index[1]-1]!=1 && board[index[0]-1][index[1]-1]!=-1) ? 2 : board[index[0]-1][index[1]-1];\n\t\t\t\t}\n\t\t\t\tif(index[0]-1>=0 && index[0]-1<8 && index[1]-1>=0 && index[1]+1<8){\n\t\t\t\t\tboard[index[0]-1][index[1]+1] = (board[index[0]-1][index[1]+1]==0 && board[index[0]-1][index[1]+1]!=1 && board[index[0]-1][index[1]+1]!=-1) ? 2 : board[index[0]-1][index[1]+1];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tboard[index[0]][index[1]] = 2;\n\t\t\t\talert(\"INVALID MOVE\")\n\t\t\t}\n\t\t\tlet whites = 0;\n\t\t\tlet blacks = 0;\n\t\t\tlet end_of_game = 0;\n\t\t\tboard.map((row,irow) => {\n\t\t\t\trow.map((column,icolumn) => {\n\t\t\t\t\tif(column==1){\n\t\t\t\t\t\twhites = whites + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(column==-1){\n\t\t\t\t\t\tblacks = blacks + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(column==2){\n\t\t\t\t\t\tend_of_game = end_of_game + 1;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tlet message = '';\n\t\t\tif(end_of_game==0){\n\t\t\t\tif(whites!=blacks){                                                                     //DRAWS\n\t\t\t\t\tmessage = (whites>blacks) ? 'WHTE HAS WON' : 'BLACK HAS WON'\t\t\t\t\t\t//Message for show winner\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmessage = \"IT'S A DRAW\"\n\t\t\t\t}\n\t\t\t\tstate = {\n\t\t\t\t\tturn: true,\n\t\t\t\t\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t\t\t\t\t[0,0,2,1,-1,2,0,0],\n\t\t\t\t\t\t\t[0,0,2,-1,1,2,0,0],\n\t\t\t\t\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t[0,0,0,0,0,0,0,0]\n\t\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\talert(message)//alert who won the game\n\t\t\t}\n\t\t\troot.innerHTML = '';\n        \trender(root, state);//Restart the game\n\t\t}\n\t\telse{\n\t\t\talert(\"INVALID MOVE\")\n\t\t}\n\t};\n\tcell.appendChild(piece)\n\treturn cell\n}\n\nconst render = (root, state) =>{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Design of the page\n\tconst header = document.createElement('div');\n\theader.style.backgroundColor='black';\n\theader.style.minWidth = '330px';\n\theader.style.height = '175px';\n\theader.style.display = 'flex';\n\theader.style.flexDirection = 'column'\n\theader.style.justifyContent = 'center';\n\theader.style.alignItems = 'center';\n\theader.style.overflow = 'auto';\n\n\tconst header_tittle = document.createElement('h1');\n\tconst tittle_textNode = document.createTextNode('OTHELLO')\n\theader_tittle.appendChild(tittle_textNode)\n\theader_tittle.style.backgroundColor = 'black'\n\theader_tittle.style.color = 'white'\n\theader_tittle.style.fontSize = '45px';\n\theader.appendChild(header_tittle)\n\n\tconst author = document.createElement('h1');\n\tconst author_textNode = document.createTextNode('Made by: SUULCODER')\n\tauthor.appendChild(author_textNode)\n\tauthor.style.backgroundColor = 'black'\n\tauthor.style.color = 'white'\n\tauthor.style.fontSize = '10px';\n\tauthor.style.marginBottom = '15px';\n\theader.appendChild(author)\n\n\tconst body = document.createElement('div');\n\tbody.style.backgroundColor = 'black'\n\tbody.style.minWidth = '330px';\n\tbody.style.height = '1000px'\n\tbody.style.display = 'flex';\n\theader.style.flexDirection = 'column'\n\tbody.style.justifyContent = 'center';\n\n\tconst board = document.createElement('div');\n\tboard.style.backgroundColor = 'green'\n\tboard.style.width = '295px';\n\tboard.style.height = '312px';\n\tboard.style.marginTop = '91px';\n\tboard.style.overflow = 'auto'\n\n\tconst currentState = document.createElement('div');\n\tconst curr_h1 = document.createElement('h1')\n\tconst curr_circle = document.createElement('div')\n\tconst turn = (state.turn) ? 'white' : 'black'\n\tconst currentState_textNode = document.createTextNode('turn: ' + turn)\n\tcurrentState.style.display = 'flex'\n\tcurrentState.style.minWidth = '330px';\n\tcurr_h1.appendChild(currentState_textNode)\n\tcurrentState.style.backgroundColor = '#218032'\n\tcurrentState.style.justifyContent = 'center'\n\tcurrentState.style.color = 'white'\n\tcurr_h1.style.fontSize = '20px';\n\tcurr_circle.style.backgroundColor = turn;\n\tcurr_circle.style.borderRadius = '100px';\n\tcurr_circle.style.height = '15px'\n\tcurr_circle.style.width = '15px'\n\tcurr_circle.style.padding = '7px'\n\tcurr_circle.style.marginLeft = '10px'\n\tcurr_circle.style.marginTop = '10px'\n\tcurrentState.appendChild(curr_h1)\n\tcurrentState.appendChild(curr_circle)\n\n\tlet whites = 0;\n\tlet blacks = 0;\n\tstate.board.map((row,irow) => {\n\t\trow.map((column,icolumn) => {\n\t\t\tif(column==1){\n\t\t\t\twhites = whites + 1;\n\t\t\t}\n\t\t\telse if(column==-1){\n\t\t\t\tblacks = blacks + 1;\n\t\t\t}\n\t\t})\n\t})\n\n\tconst currentwinner = document.createElement('div');\n\tconst curr_whites = document.createElement('h1')\n\tconst curr_blacks = document.createElement('h1')\n\tconst white_circle = document.createElement('div')\n\tconst black_circle = document.createElement('div')\n\tconst white_textNode = document.createTextNode(whites)\n\tconst black_textNode = document.createTextNode(blacks)\n\tcurrentwinner.style.display = 'flex'\n\tcurrentwinner.style.marginTop = '2px';\n\tcurrentwinner.style.minWidth = '330px';\n\tcurr_whites.appendChild(white_textNode)\n\tcurr_blacks.appendChild(black_textNode)\n\tcurrentwinner.style.backgroundColor = '#218032'\n\tcurrentwinner.style.justifyContent = 'center'\n\tcurrentwinner.style.color = 'white'\n\tcurr_whites.style.fontSize = '12px';\n\tcurr_blacks.style.fontSize = '12px';\n\twhite_circle.style.backgroundColor = 'white';\n\tblack_circle.style.backgroundColor = 'black';\n\twhite_circle.style.borderRadius = '100px';\n\tblack_circle.style.borderRadius = '100px';\n\twhite_circle.style.height = '5px'\n\twhite_circle.style.width = '5px'\n\twhite_circle.style.padding = '7px'\n\twhite_circle.style.marginLeft = '10px'\n\twhite_circle.style.marginRight = '10px'\n\twhite_circle.style.marginTop = '7px'\n\tblack_circle.style.height = '5px'\n\tblack_circle.style.width = '5px'\n\tblack_circle.style.padding = '7px'\n\tblack_circle.style.marginLeft = '10px'\n\tblack_circle.style.marginRight = '10px'\n\tblack_circle.style.marginTop = '7px'\n\tcurrentwinner.appendChild(white_circle)\n\tcurrentwinner.appendChild(curr_whites)\n\tcurrentwinner.appendChild(black_circle)\n\tcurrentwinner.appendChild(curr_blacks)\n\n\tstate.board.map((row, irow) =>\n\t\trow.map((column,icolumn) => renderCell({\n\t\t\tvalue: column,\n\t\t\tindex: [irow,icolumn],\n\t\t\tstate: state\n\t\t}))).map(my_row =>{\t\n\t\t\tconst curr_row = document.createElement('div')\n\t\t\tcurr_row.style.display = 'flex'\n\t\t\tmy_row.forEach(\n\t\t\t\tcell => curr_row.appendChild(cell),\n\t\t\t)\n\t\t\tboard.appendChild(curr_row)\n\t});\n\n\tbody.appendChild(board);\n\troot.appendChild(header);\n\troot.appendChild(currentState);\n\troot.appendChild(currentwinner);\n\troot.appendChild(body);\n};\n\n\nconst state = {\t\t\t\t\t\t\t\t//State of the game. \n\tturn: true,\n\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t[0,0,2,1,-1,2,0,0],\n\t\t\t[0,0,2,-1,1,2,0,0],\n\t\t\t[0,0,0,2,2,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0]\n\t\t]\n};\nrender(root,state);\n"]},"metadata":{},"sourceType":"module"}
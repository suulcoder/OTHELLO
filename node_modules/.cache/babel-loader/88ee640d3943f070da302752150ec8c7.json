{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nconst root = document.getElementById('root');\n\nconst renderCell = ({\n  value,\n  index,\n  turn\n}) => {\n  const cell = document.createElement('button');\n  cell.style.backgroundColor = '#218032';\n  cell.style.borderColor = 'blac';\n  cell.style.display = 'block';\n  cell.style.borderStyle = 'solid';\n  cell.marginTop = '2px';\n  cell.marginBottom = '2px';\n  cell.marginRight = '2px';\n  cell.marginLeft = '2px';\n  cell.style.width = '100%';\n  cell.style.height = '37px';\n  return cell;\n};\n\nconst render = (root, state) => {\n  const header = document.createElement('div');\n  header.style.backgroundColor = 'black';\n  header.style.width = '100%';\n  header.style.height = '80px';\n  const header_tittle = document.createElement('h1');\n  header_tittle.style.fontSize = '10px';\n  header.appendChild(header_tittle);\n  const body = document.createElement('div');\n  body.style.backgroundColor = 'black';\n  body.style.width = '100%';\n  body.style.height = '1000px';\n  body.style.display = 'flex';\n  body.style.justifyContent = 'center';\n  body.style.marginTop = '2px';\n  const board = document.createElement('div');\n  board.style.backgroundColor = 'green';\n  board.style.width = '300px';\n  board.style.height = '300px';\n  board.style.marginTop = '50px';\n  state.board.map((row, irow) => row.map((column, icolumn) => renderCell({\n    value: column,\n    index: [irow, icolumn],\n    turn: state.turn\n  }))).map(my_row => {\n    const curr_row = document.createElement('div');\n    curr_row.style.display = 'flex';\n    my_row.forEach(cell => curr_row.appendChild(cell));\n    board.appendChild(curr_row);\n  });\n  body.appendChild(board);\n  root.appendChild(header);\n  root.appendChild(body);\n};\n\nconst state = {\n  turn: true,\n  board: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, -1, 0, 0, 0], [0, 0, 0, -1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n};\nrender(root, state);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÃ‘O WEB/OTHELLO/src/index.js"],"names":["React","ReactDOM","root","document","getElementById","renderCell","value","index","turn","cell","createElement","style","backgroundColor","borderColor","display","borderStyle","marginTop","marginBottom","marginRight","marginLeft","width","height","render","state","header","header_tittle","fontSize","appendChild","body","justifyContent","board","map","row","irow","column","icolumn","my_row","curr_row","forEach"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nconst root = document.getElementById('root');\n\nconst renderCell = ({\n\tvalue,\n\tindex,\n\tturn\n}) => {\n\tconst cell = document.createElement('button')\n\tcell.style.backgroundColor = '#218032'\n\tcell.style.borderColor = 'blac'\n\tcell.style.display = 'block'\n\tcell.style.borderStyle = 'solid'\n\tcell.marginTop = '2px'\n\tcell.marginBottom = '2px'\n\tcell.marginRight = '2px'\n\tcell.marginLeft = '2px'\n\tcell.style.width='100%'\n\tcell.style.height='37px'\n\treturn cell\n\n}\n\nconst render = (root, state) =>{\n\tconst header = document.createElement('div');\n\theader.style.backgroundColor='black';\n\theader.style.width = '100%';\n\theader.style.height = '80px';\n\n\tconst header_tittle = document.createElement('h1');\n\theader_tittle.style.fontSize = '10px';\n\theader.appendChild(header_tittle)\n\n\tconst body = document.createElement('div');\n\tbody.style.backgroundColor = 'black'\n\tbody.style.width = '100%';\n\tbody.style.height = '1000px'\n\tbody.style.display = 'flex';\n\tbody.style.justifyContent = 'center';\n\tbody.style.marginTop = '2px';\n\n\tconst board = document.createElement('div');\n\tboard.style.backgroundColor = 'green'\n\tboard.style.width = '300px';\n\tboard.style.height = '300px';\n\tboard.style.marginTop = '50px';\n\t\n\tstate.board.map((row, irow) =>\n\t\trow.map((column,icolumn) => renderCell({\n\t\t\tvalue: column,\n\t\t\tindex: [irow,icolumn],\n\t\t\tturn: state.turn\n\t\t}))).map(my_row =>{\t\n\t\t\tconst curr_row = document.createElement('div')\n\t\t\tcurr_row.style.display = 'flex'\n\t\t\tmy_row.forEach(\n\t\t\t\tcell => curr_row.appendChild(cell),\n\t\t\t)\n\t\t\tboard.appendChild(curr_row)\n\t});\n\tbody.appendChild(board);\n\troot.appendChild(header);\n\troot.appendChild(body);\n};\n\n\nconst state = {\n\tturn: true,\n\tboard: [[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,1,-1,0,0,0],\n\t\t\t[0,0,0,-1,1,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0]\n\t\t]\n};\n\nrender(root,state);\n"]},"metadata":{},"sourceType":"module"}